<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[前端基础练习题第32天 答案及解析]]></title>
    <url>%2Fjsexer32-ans.html</url>
    <content type="text"><![CDATA[本篇文章是前端基础练习题第三十二天的答案及解析部分，纯题目部分请移步前端基础练习题 第32天正文1.如何从new Date()返回的数据中提取出日期，并转换为YYYY-MM-DD的格式？参考代码如下所示：12345678// 方式1，利用正则表达式new Date().toLocaleDateString().replace(/\/(\d)(?!\d)/g, &#39;-0$1&#39;).replace(/\//g, &#39;-&#39;);// 方式2，利用toISOString和substrnew Date().toISOString().substr(0, 10);// 方式3，利用toJSON和substrnew Date().toJSON().substr(0, 10);当然了，最传统的方法还是写一个format函数，根据传入的格式进行转换。具体可参考标准时间格式化。2.如何从new Date()返回的数据中提取出时间，并转换为hh:mm:ss的格式？参考代码如下所示：12345678// 方式1，利用toTimeStringnew Date().toTimeString().split(&quot; &quot;)[0];// 方式2，利用toLocaleTimeString和正则替换new Date().toLocaleTimeString().replace(/下午(\d+)/g, ($0, $1) =&gt; 12 + Number($1));// 方式3，利用toStringnew Date().toString().split(&quot; &quot;)[4];同理，本题也可以写一个format函数，将传入的时间值转换为指定的格式。具体可参考时间格式转换。3.js如何获取当前时间的时间戳？在js中有如下几种方式获取时间戳Date.now()，ES6新增API，直接获取当前时间的时间戳new Date().getTime()Date.parse(new Date())new Date().valueOf()常用的方式是第一种和第三种。不过第一种方式只能获取当前时间的时间戳而不能传入指定的时间日期，第三种方式则可以获取指定日期时间的时间戳。4.js如何将时间戳转换为日期时间格式？通过将时间戳传入Date的构造函数里，即 new Date(timeStamp)即可得到该timeStamp所对应的日期时间。将时间戳转换为标准日期时间后，亦可进行一些格式化操作，如题目1和题目2所示。5.如何对数组中的对象进行去重，并返回一个无重复对象的数组？试完善arrayUnique函数，如下所示1234567let arr = [ &#123; id: 1, name: 'Jealyn' &#125;, &#123; id: 1, name: 'Jinlin' &#125;, &#123; id: 2, name: 'Jealyn' &#125;, &#123; id: 2, name: 'Jinlin' &#125;];arrayUnique(arr, 'id'); // [&#123; id: 1, name: 'Jealyn' &#125;, &#123; id: 2, name: 'Jealyn' &#125;]参考代码如下所示：1234567function arrayUnique(arr, name) &#123; let hash = &#123;&#125;; return arr.reduce((item, next) =&gt; &#123; hash[next[name]] ? &#39;&#39; : hash[next[name]] = true &amp;&amp; item.push(next); return item; &#125;, []);&#125;该函数根据指定的键值(name)对数组中的对象进行去重，去除对象数组中后出现的name属性值相同的元素。对数组的循环上，采用的是reduce方法进行迭代。6.js如何按照指定的长度为数字前面补0？参考代码如下所示：123const fixCount = (str, count = 0) =&gt; &#123; return (&#39;0&#39;.repeat(count) + str).slice(-count);&#125;这段程序主要利用了repeat函数和slice函数。repeat函数将&#39;0&#39;重复指定次数，再拼接上该数字，然后从这一段字符串的-count位开始取值，取count位即可。7.jQuery如何实现缓慢回到顶部的功能(即为回到顶部添加动画功能)？参考代码如下所示：12345$(&quot;#scrollTop&quot;).click(function() &#123; $(&quot;html,body&quot;).animate(&#123; scrollTop: 0 &#125;, 500);&#125;);既然是缓慢回到顶部，实则就是考查对animate函数的应用以及scrollTop属性的明确。说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击前端基础练习题 第32天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
        <tag>Date</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端基础练习题 第32天]]></title>
    <url>%2Fjsexer32.html</url>
    <content type="text"><![CDATA[该篇文章是该系列的第三十二天。在今天的习题中，将主要讨论js中对于日期的相关操作以及如何对数组中的重复对象进行去重。正文1.如何从new Date()返回的数据中提取出日期，并转换为YYYY-MM-DD的格式？2.如何从new Date()返回的数据中提取出时间，并转换为hh:mm:ss的格式？3.js如何获取当前时间的时间戳？4.js如何将时间戳转换为日期时间格式？5.如何对数组中的对象进行去重，并返回一个无重复对象的数组？试完善arrayUnique函数，如下所示1234567let arr = [ &#123; id: 1, name: 'Jealyn' &#125;, &#123; id: 1, name: 'Jinlin' &#125;, &#123; id: 2, name: 'Jealyn' &#125;, &#123; id: 2, name: 'Jinlin' &#125;];arrayUnique(arr, 'id'); // [&#123; id: 1, name: 'Jealyn' &#125;, &#123; id: 2, name: 'Jealyn' &#125;]6.js如何按照指定的长度为数字前面补0？7.jQuery如何实现缓慢回到顶部的功能(即为回到顶部添加动画功能)？说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击前端基础练习题第32天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
        <tag>Date</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端基础练习题第31天 答案及解析]]></title>
    <url>%2Fjsexer31-ans.html</url>
    <content type="text"><![CDATA[本篇文章是前端基础练习题第三十一天的答案及解析部分，纯题目部分请移步前端基础练习题 第31天正文1.HTML代码如下所示：123456&lt;select id="fruits" multiple="multiple"&gt; &lt;option value="apple"&gt;苹果&lt;/option&gt; &lt;option value="banana"&gt;香蕉&lt;/option&gt; &lt;option value="orange"&gt;橙子&lt;/option&gt; &lt;option value="pear"&gt;梨子&lt;/option&gt;&lt;/select&gt;则如何获取到该选择框的所有选中值，并分别在控制台打印出选中的文字，试用jQuery代码实现。参考代码如下所示：12345$(&#39;#fruits&#39;).blur(function() &#123; $(&#39;#fruits :selected&#39;).each(function(item) &#123; console.log($(this).text()); &#125;);&#125;);该题利用了jQuery的表单过滤选择符:selected，其会获取所有被选中的表单项；在本习题里，绑定blur事件主要是因为多选的存在。若修改为change事件，则只会获取到一个值；each函数用来循环遍历所有选中值；text函数用来输出文字，val函数用来获取value值。2.说说jQuery中的$.ajax方法如何使用？$.ajax是jQuery中封装好的使用ajax的方法，使用时传入url、请求类型、失败或成功的回调函数等，示例如下所示：12345678910111213$.ajax(&#123; url: &#39;/api/reserve&#39;, type: &#39;post&#39;, data: JSON.stringify(info), datatype: &#39;json&#39;, contentType: &#39;application/json&#39;, success: function(res) &#123; // … &#125;, error: function() &#123; // … &#125;&#125;);3.jQuery是如何处理缓存的？要处理缓存就是禁用缓存通过$.post()方法来获取数据，那么默认就是禁用缓存的通过$.get()方法获取数据，可以通过设置时间戳来避免缓存，可以在url后面加上 +(+new Date)通过$.ajax()来获取数据，只要设置cache:false即可。4.$.extend与$.fn.extend的区别在哪？$.fn.extend()和$.extend()是jQuery为扩展插件提供的两个方法。$.extend(object)是为jQuery添加静态方法，即工具方法，其拓展方法的调用方式为$.extendFn()$.fn.extend(json)用来为jQuery添加成员函数，即实例方法，其调用方式为$(&#39;dom&#39;).extendFn()。5.利用jQuery如何实现深拷贝？通过使用$.extend(true, target, object1 [, objectN])方法可实现深拷贝。其中第一个参数就是控制深浅拷贝的，为true时为深拷贝，不定义时为浅拷贝。不能显式地将第一个参数置为false，否则会报错。6.jQuery框架解决了前端开发的哪些痛点？jQuery的诞生为前端开发带来了极大的方便，主要表现在：浏览器兼容问题，使用jQuery后，IE9以下的浏览器基本不用再为其单独写样式和方法DOM元素选择问题，jQuery内置了非常丰富的元素选择器，操作DOM变得特别容易带来了便捷的动画效果制作简化了冗长的ajax请求，使得ajax请求变得简短和通用7.你觉得jQuery过时了吗？有哪些代替jQuery的解决方案。随着WEB的发展和众多优秀框架的涌现，jQuery的使用场景确已减少浏览器兼容方面，现在IF9以下的浏览器基本可以不用再考虑了元素选择方面，CSS3新增了大量的选择器动画效果方面，CSS3新增了动画方面的属性、HTML5中也有canvas可制作动画ajax方面，有axios等框架集成了更为完善和简便的ajaxDOM操作和事件绑定上，对DOM的操作尽量减少，现多利用MVVM框架，如Vue、React等组件化与模块化方面，可使用ES6的模块语法、webpack打包、gulp等尽管jQuery目前已渐渐淡出前端开发的舞台，但是还是有一些项目中在使用，自然也需要维护和开发的。所以jQuery的相关知识，仍然是需要掌握的。说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击前端基础练习题 第31天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>jQuery</tag>
        <tag>ajax</tag>
        <tag>深拷贝</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端基础练习题 第31天]]></title>
    <url>%2Fjsexer31.html</url>
    <content type="text"><![CDATA[该篇文章是该系列的第三十一天。本次习题将继续分享jQuery方面的习题，虽然jQuery目前已渐渐退出前端开发的舞台，不过其当初可是为前端开发带来了极大的便利，它的核心知识点还是有掌握的必要的。正文1.HTML代码如下所示：123456&lt;select id="fruits" multiple="multiple"&gt; &lt;option value="apple"&gt;苹果&lt;/option&gt; &lt;option value="banana"&gt;香蕉&lt;/option&gt; &lt;option value="orange"&gt;橙子&lt;/option&gt; &lt;option value="pear"&gt;梨子&lt;/option&gt;&lt;/select&gt;则如何获取到该选择框的所有选中值，并分别在控制台打印出选中的文字，试用jQuery代码实现。2.说说jQuery中的$.ajax方法如何使用？3.jQuery是如何处理缓存的？4.$.extend与$.fn.extend的区别在哪？5.利用jQuery如何实现深拷贝？6.jQuery框架解决了前端开发的哪些痛点？7.你觉得jQuery过时了吗？有哪些代替jQuery的解决方案。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击前端基础练习题第31天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>jQuery</tag>
        <tag>ajax</tag>
        <tag>深拷贝</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端基础练习题第30天 答案及解析]]></title>
    <url>%2Fjsexer30-ans.html</url>
    <content type="text"><![CDATA[本篇文章是前端基础练习题第三十天的答案及解析部分，纯题目部分请移步前端基础练习题 第30天正文1.JS中常见的内存泄漏原因有哪些？常见的内存泄漏原因有4个：全局变量引起内存泄漏闭包引起内存泄漏DOM清空或删除时，事件未清除导致的内存泄漏子元素存在引用引起的内存泄漏2.相比于原生js，使用jQuery有哪些好处？jQuery具有如下优点：它有强大的选择器、出色的DOM操作的封装有可靠的事件处理机制有完善的ajax封装具备出色的浏览器兼容性支持链式操作和隐式迭代具有完善的文档和丰富的插件3.jQuery中的$符号是什么？$符号只是jQuery的别名，它是jQuery的选择器，通过它可将DOM对象转为jQuery对象。当然，也完全可以使用jQuery来代替$。4.jQuery对象和DOM对象如何转化？jQuery对象是一个包含了DOM对象的数组。可通过jQuery对象[下标]来获取DOM对象，也可通过$(DOM对象)来将DOM对象转换为jQuery对象。5.jQuery中有几类选择器？jQuery中大致有5类选择器：基本选择器，如$(&quot;#id&quot;)、$(&quot;.class&quot;)、$(&quot;div&quot;)等层次选择器，如$(&quot;div p&quot;)、$(&quot;form &gt; input&quot;)等过滤选择器，如$(&quot;li:first&quot;)、$(&quot;tr:even&quot;)等属性选择器，如$(&quot;input[name=&#39;text&#39;]&quot;)等表单选择器，如$(&quot;:hidden&quot;)、$(&quot;:selected&quot;)等6.jQuery如何去操作样式？如下所示：jQuery添加类名，addClass()jQuery删除类名，removeClass()jQuery切换类名，如果有就移除，如果没有就添加，toggleClass()或者直接操作CSS，方式为$(&#39;dom&#39;).css({ key: value })。7.请使用jQuery编写一个函数，此函数绑定到body的mousemove事件上，在事件中输出鼠标的位置。参考代码如下所示：123$(&#39;body&#39;).mousemove(function(e) &#123; console.log(e.pageX, e.pageY);&#125;)可通过事件对象的pageX、pageY属性获得鼠标的位置。8.利用jQuery编写代码，使页面中的第一个表格能够进行隔行换色(表格的奇数行与偶数行的背景色不同)。参考代码如下所示：1$(&#39;table:first tr:even&#39;).css(&#39;backgroundColor&#39;, &#39;#ccc&#39;)本题主要是考察jQuery过滤选择器和其对CSS的操作方法。说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击前端基础练习题 第30天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端基础练习题 第30天]]></title>
    <url>%2Fjsexer30.html</url>
    <content type="text"><![CDATA[该篇文章是该系列的第三十天。本次习题将会针对jQuery进行展开，都是一些jQuery的基础概念和必备知识，没有了解过jQuery的朋友可以暂且跳过本部分内容哈。正文1.JS中常见的内存泄漏原因有哪些？2.相比于原生js，使用jQuery有哪些好处？3.jQuery中的$符号是什么？4.jQuery对象和DOM对象如何转化？5.jQuery中有几类选择器？6.jQuery如何去操作样式？7.请使用jQuery编写一个函数，此函数绑定到body的mousemove事件上，在事件中输出鼠标的位置。8.利用jQuery编写代码，使页面中的第一个表格能够进行隔行换色(表格的奇数行与偶数行的背景色不同)。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击前端基础练习题第30天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端基础练习题第29天 答案及解析]]></title>
    <url>%2Fjsexer29-ans.html</url>
    <content type="text"><![CDATA[本篇文章是前端基础练习题第二十九天的答案及解析部分，纯题目部分请移步前端基础练习题 第29天正文1.试利用JS代码在body中生成16个div，每个div的宽高为60 * 60px，里面内容为1-16自身序号，背景颜色为红橙蓝绿随机显示，布局为4行4列排列，具体如下图所示：参考代码如下所示：12345678910111213// CSS部分body &#123; position: relative;&#125;body div &#123; position: absolute; width: 60px; height: 60px; text-align: center; line-height: 60px; color: #fff; border-radius: 50%;&#125;1234567// JS部分var str = &#39;&#39;;var colors = [&#39;red&#39;, &#39;orange&#39;, &#39;blue&#39;, &#39;green&#39;];for (var i = 0; i &lt; 16; i++) &#123; str += &#39;&lt;div style=&quot;left:&#39; + i%4*60 + &#39;px;top:&#39; + Math.floor(i/4)*60 + &#39;px;background:&#39; + colors[Math.floor(Math.random()*4)] + &#39;;&quot;&gt;&#39; + (i + 1) + &#39;&lt;/div&gt;&#39;;&#125;document.body.innerHTML += str;本题目主要利用定位，通过改变元素的top和left的位置，使其呈现规律的排布。随机背景方面，用到了随机数，即Math.random()的相关知识。2.如何在数组的开头添加、删除元素？如何在数组的末尾添加、删除元素？在数组开头添加元素应使用unshift()方法，可添加一或多个；移除数组中的第一个元素应使用shift()方法；在数组末尾添加元素应使用push()方法，可添加一或多个；移除数组中的最后一个元素应使用pop()方法。3.在JS中，如何让a == 1 &amp;&amp; a == 2 &amp;&amp; a == 3这个表达式返回true？可利用隐式转换的相关知识，代码如下所示：123456const a = &#123; i: 1, toString() &#123; return this.i++; &#125;&#125;本题利用了隐式转换，当对象/数组进行比较时，会调用toString和valueOf方法，通过修改这两个方法，就可以自定义转换时的返回值。4.在JS中，如何让a === 1 && a === 2 && a === 3这个表达式返回true？可利用劫持getter的知识来设计，代码如下所示：123456var i = 1;Object.defineProperty(window, &#39;a&#39;, &#123; get() &#123; return i++; &#125;&#125;);本题利用了劫持getter的知识，当访问变量a时，就会调用get方法，使其自增，下一次访问a时，a的值已经被修改过了。5.分析下列代码的执行结果：12345678910function a(b) &#123; console.log(b); var b = 22; console.log(b); function b() &#123; console.log(b); &#125; console.log(b);&#125;a(11);答案：function b() { console.log(b);}、22、22 。此题涉及到变量声明提升和函数声明优先的知识点。在函数体内，函数声明被提升到了顶部，故第一次输出的为函数，后面的变量赋值又覆盖了函数声明，故后续的访问值都为22。6.试描述浏览器对网页的渲染过程。浏览器对网页的渲染过程为：解析HTML以构建DOM(DOM树)，并行请求CSS/JS/image等CSS文件下载完成，构建CSSOM(CSS树)CSSOM构建结束后，和DOM一起生成渲染树(Render Tree)布局(Layout)，计算出每一个节点在屏幕中的位置显示(Painting)，通过显卡将页面显示到屏幕上7.试简述重绘与回流的区别和关系。重绘(repaint)是指当渲染树中的元素部分属性发生变化，如颜色、透明度等不会引起布局变化而重新渲染的过程；回流(reflow)是指当渲染树中的元素布局发生改变而需要重建的过程。回流必将引起重绘，而重绘不一定会引起回流。说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击前端基础练习题 第29天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
        <tag>DOM</tag>
        <tag>==与===</tag>
        <tag>CSS</tag>
        <tag>变量提升</tag>
        <tag>网页渲染过程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端基础练习题 第29天]]></title>
    <url>%2Fjsexer29.html</url>
    <content type="text"><![CDATA[该篇文章是该系列的第二十九天。在这一次的练习中，将会关注JS对页面以及样式的操作和一些JS特性以及浏览器对网页的渲染过程的相关知识点。正文1.试利用JS代码在body中生成16个div，每个div的宽高为60 * 60px，里面内容为1-16自身序号，背景颜色为红橙蓝绿随机显示，布局为4行4列排列，具体如下图所示：2.如何在数组的开头添加、删除元素？如何在数组的末尾添加、删除元素？3.在JS中，如何让a == 1 &amp;&amp; a == 2 &amp;&amp; a == 3这个表达式返回true？4.在JS中，如何让a === 1 &amp;&amp; a === 2 &amp;&amp; a === 3这个表达式返回true？5.分析下列代码的执行结果：12345678910function a(b) &#123; console.log(b); var b = 22; console.log(b); function b() &#123; console.log(b); &#125; console.log(b);&#125;a(11);6.试描述浏览器对网页的渲染过程。7.试简述重绘与回流的区别和关系。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击前端基础练习题第29天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
        <tag>DOM</tag>
        <tag>==与===</tag>
        <tag>CSS</tag>
        <tag>变量提升</tag>
        <tag>网页渲染过程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端基础练习题第28天 答案及解析]]></title>
    <url>%2Fjsexer28-ans.html</url>
    <content type="text"><![CDATA[本篇文章是前端基础练习题第二十八天的答案及解析部分，纯题目部分请移步前端基础练习题 第28天正文1.试完善以下代码，以解释JS引擎是如何查找一个对象obj的属性prop的（包含原型链上的属性）？1234function getProperty(obj, prop) &#123; // your code here //...&#125;参考代码如下所示：123456789function getProperty(obj, prop) &#123; if(obj.hasOwnProperty(prop)) &#123; return obj[prop]; &#125; else if(obj._proto_ != null) &#123; return getProperty(obj._proto_, prop); &#125; else &#123; return undefined; &#125;&#125;采用递归的方式寻找对象及其原型链上的相关属性，直到其原型为空。这里利用了递归、hasOwnProperty方法、_proto_属性和getProperty方法。2.定义一个函数，以实现下列结果：1[1, 2, 3, 4, 5].duplicator(); // [1, 2, 3, 4, 5, 1, 2, 3, 4, 5]参考代码如下所示：12345678910111213// 方法1: concatArray.prototype.duplicator = function() &#123; return this.concat(this);&#125;// 方法2: 遍历数组，依次插值Array.prototype.duplicator = function() &#123; var temp = this; this.forEach(function(item) &#123; temp.push(item); &#125;); return temp;&#125;由该函数的调用方式易知，该函数是定义在Array的原型上的。该函数的作用就是在数组末尾重复数组内的值。很容易想到concat方法，直接拼接该数组即可；方法2则是获取数组的所有值，然后按序在末尾添加。3.如何确定标签内容的覆盖顺序？有两种方式可以确定：根据z-index属性确定，z-index属性用来设置元素的堆叠顺序，拥有更高值的元素会处于较低值元素的前面根据CSS优先级确定，优先级更高的样式，其设置的堆叠属性会覆盖优先级低的样式4.请写出验证中国手机号的正则表达式。如下所示：12345// reg1: 简略var telReg1 = /^1\d&#123;10&#125;$/;// reg2: 详细var telReg2 = /^1([38]\d|4[579]|5[0-3,5-9]|66|7[0135678]|9[89])\d&#123;8&#125;$/;第一个正则表达式比较简略，只需要匹配以1开头，后跟10个数字的字符串即可；第二个正则表达式则考虑了号段，相对来说详尽一些。5.如何利用CSS绘制一个三角形？代码如下所示：1234567891011/* HTML */&lt;div class=&quot;triangle&quot;&gt;&lt;/div&gt;/* CSS */.triangle &#123; width: 0; height: 0; border: 5px solid transparent; border-top: 5px solid #000; /* OR */ /* border-top-color: #000; */利用CSS绘制三角形主要就是利用元素的border属性。6.如何将JS值转为JSON格式？如何将JSON字符串解析为JS值？JSON.stringify()方法用来将一个JavaScript值转换为一个JSON字符串；JSON.parse()方法用来解析JSON字符集，构造由字符集描述的JavaScript值或对象。7.如何将浏览器URL查询字符串转为一个对象，如http://jealyn.top?name=jealyn&amp;age=23&amp;gender=male的查询参数将转化为：12345&#123; name: 'jelayn', age: 23, gender: 'male'&#125;参考代码如下所示：12345678910111213function getQueries() &#123; let args = window.location.href.split(&#39;?&#39;); let result = &#123;&#125;; if(args[0] == window.location.href) &#123; return result; &#125; let items = args[1].split(&#39;&amp;&#39;); items.forEach( item =&gt; &#123; let arg = item.split(&#39;=&#39;); result[arg[0]] = arg[1]; &#125;); return result;&#125;URL的查询参数是指?后面的部分，每组参数以&amp;分隔，其键与值之间通过=分隔，根据以上规则将URL进行分割获取即可。8.为网站设置404页面有何用处？404页面通常为用户访问了网站上不存在或已删除的页面。设置404页面既可以引导用户不要关闭网站，增强了用户体验；又防止了网站出现死链接，利于SEO与搜索引擎收录。说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击前端基础练习题 第28天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
        <tag>Object</tag>
        <tag>元素堆叠顺序</tag>
        <tag>RegExp</tag>
        <tag>CSS</tag>
        <tag>JSON</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端基础练习题 第28天]]></title>
    <url>%2Fjsexer28.html</url>
    <content type="text"><![CDATA[该篇文章是该系列的第二十八天。在本次习题中，将会有JS原型链、数组元素重复操作(duplicate)、元素堆叠顺序判断、手机号正则表达式书写、CSS绘制三角形、JS值与JSON格式转换、url查询参数对象化、设置404页面等相关习题的练习。正文1.试完善以下代码，以解释JS引擎是如何查找一个对象obj的属性prop的（包含原型链上的属性）？1234function getProperty(obj, prop) &#123; // your code here //...&#125;2.定义一个函数，以实现下列结果：1[1, 2, 3, 4, 5].duplicator(); // [1, 2, 3, 4, 5, 1, 2, 3, 4, 5]3.如何确定标签内容的覆盖顺序？4.请写出验证中国手机号的正则表达式。5.如何利用CSS绘制一个三角形？6.如何将JS值转为JSON格式？如何将JSON字符串解析为JS值？7.如何将浏览器URL查询字符串转为一个对象，如http://jealyn.top?name=jealyn&amp;age=23&amp;gender=male的查询参数将转化为：12345&#123; name: 'jelayn', age: 23, gender: 'male'&#125;8.为网站设置404页面有何用处？说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击前端基础练习题第28天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
        <tag>Object</tag>
        <tag>元素堆叠顺序</tag>
        <tag>RegExp</tag>
        <tag>CSS</tag>
        <tag>JSON</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端基础练习题第27天 答案及解析]]></title>
    <url>%2Fjsexer27-ans.html</url>
    <content type="text"><![CDATA[本篇文章是前端基础练习题第二十七天的答案及解析部分，纯题目部分请移步前端基础练习题 第27天正文1.请简述GET请求与POST请求的区别。区别如下所示：参数传递方式不同。get请求会将参数跟在URL后进行传输，而post请求则是作为HTTP消息的实体内容发送给Web服务器的，这种传递是对用户不可见的。数据传输大小不同。get方式传输的数据大小不能超过2KB，而post要大得多。安全问题。get方式请求的数据会被浏览器缓存起来，因此有安全问题。2.试比较CORS与JSONP的区别。区别如下所示：CORS与JSONP的使用目的相同，但是它比JSONP更强大。JSONP只支持GET请求，CORS支持所有类型的HTTP请求。JSONP的优势在于支持老式浏览器，以及可以向不支持CORS的网站请求数据。3.函数声明与函数表达式有何区别？函数声明必须始终带有一个标识符，而函数表达式可以省略。在JS中，解析器会率先读取函数声明，并使其在执行任何代码之前可以访问，即变量提升现象，而函数表达式必须等到解析器执行到它所在的代码行，才会真正的解析执行。4.form中的input可以设置为readonly和disabled，两者有什么区别？设置了readonly属性的input不可编辑，但其中的内容可以选择和复制，并且值可以传递到后台；设置了disabled的input不可编辑，但其中的内容不可选择和复制，并且值不能被传递到后台。5.未声明变量和未定义变量有什么区别？未声明的变量是指在程序中不存在且未声明(Undeclared)的变量，如果程序尝试读取未声明变量的值，则会抛出错误；未定义变量是在程序中声明但尚未初始化(Undefined)的变量，访问未定义变量的值，会得到undefined。6.谈谈你对渐进增强与优雅降级这两种设计模式的理解。渐进增强是优先考虑低版本，先保证系统最基本的功能可用，然后再逐步做加法，针对高版本浏览器进行效果、交互、追加功能以达到更好的用户体验；优雅降级是一开始就针对高版本浏览器构建应用的完整功能，然后再逐步做减法，针对低版本的浏览器设置兼容性方法、hack方案等。7.使用语义化元素有哪些好处？使用语义化元素有以下好处：去掉或样式丢失时能让页面呈现清晰的结构便于屏幕阅读器等设备正确“阅读”你的页面，以实现无障碍访问有利于SEO，有助于网络爬虫根据标签和权重抓取更多的有效信息便于团队开发和维护，语义化的代码具有可读性且能减少差异性8.如何视觉隐藏网页内容，只让它们在屏幕阅读器中可用？可采用以下两种方式：visibility: hidden;缺陷：隐藏内容会占据它所应该占据的物理空间overflow: hidden; 一种可供参考的样式如下所示：123456.text-hidden &#123; display: block; width: 0; height: 0; overflow: hidden;&#125;这样既不会占据物理空间，又会被屏幕阅读器所读取。说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击前端基础练习题 第27天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>跨域请求</tag>
        <tag>HTTP</tag>
        <tag>HTML5</tag>
        <tag>语义化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端基础练习题 第27天]]></title>
    <url>%2Fjsexer27.html</url>
    <content type="text"><![CDATA[该篇文章是该系列的第二十七天。在本次习题中，将会有GET和POST的区别、CORS与JSONP、函数声明、变量声明、HTML5语义化等相关习题的练习。正文1.请简述GET请求与POST请求的区别。2.试比较CORS与JSONP的区别。3.函数声明与函数表达式有何区别？4.form中的input可以设置为readonly和disabled，两者有什么区别？5.未声明变量和未定义变量有什么区别？6.谈谈你对渐进增强与优雅降级这两种设计模式的理解。7.使用语义化元素有哪些好处？8.如何视觉隐藏网页内容，只让它们在屏幕阅读器中可用？说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击前端基础练习题第27天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>跨域请求</tag>
        <tag>HTTP</tag>
        <tag>HTML5</tag>
        <tag>语义化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端基础练习题第26天 答案及解析]]></title>
    <url>%2Fjsexer26-ans.html</url>
    <content type="text"><![CDATA[本篇文章是前端基础练习题第二十六天的答案及解析部分，纯题目部分请移步前端基础练习题 第26天正文1.（判断题）&lt;script&gt;标签的async属性可以保证脚本的执行顺序，而defer属性无法保证先出现在页面上的脚本先执行。答案：错误。defer属性能保证脚本的先后执行顺序，而async属性决定了先解析完的脚本先执行。2.如何利用userAgent属性大致的判断用户访问设备是否为手机端，若为手机端，就跳转至m.jealyn.top，否则就访问jealyn.top？示例代码如下所示：12345678// 获取userAgentvar ua = window.navigator.userAgent;// 利用正则表达式，控制href属性if(/mobile|android|iphone|webos|ipod/i.test(ua)) &#123; window.location.href = &quot;https://m.jealyn.top&quot;;&#125; else &#123; window.location.href = &quot;https://jealyn.top&quot;;&#125;3.（判断题）http://example.com设置的Cookie可以被https://example.com读取。答案：正确。Cookie的“同源策略”仅关注域名（domain），而不受协议和端口的限制。4.手写一段AJAX代码，该代码通过GET方式访问/example.html页面，当服务器成功返回数据时，在控制台打印返回信息，否则输出状态码和状态字符串。示例代码如下所示：12345678910var xhr = new XMLHttpRequest();xhr.open(&#39;GET&#39;, &#39;/example.html&#39;, true);xhr.onreadystatechange = function() &#123; if(xhr.readyState === 4 &amp;&amp; xhr.status === 200) &#123; console.log(xhr.response); &#125; else &#123; console.log(xhr.status, xhr.statusText); &#125;&#125;xhr.send(null);实现一个AJAX请求和调用通常需要以下几个步骤：创建XMLHttpRequest对象创建HTTP请求（open方法），并设置请求方法、请求地址和请求形式（异步/同步）设置响应HTTP请求状态变化的函数发送HTTP请求（send方法）获取返回的数据，并进行相应的数据操作5.下列HTTP状态码分别代表什么意思？试简述之。200、301、401、404、500答案如下所示：200(OK)，成功，表示服务器已成功处理了请求。301(Moved Permanently)，永久重定向，表示所请求的资源已永久的移动到新位置。401(Unauthorized)，未授权，表示该请求由于凭据无效而被拒绝访问。404(Not Found)，未找到，请求服务器上不存在的网页就会返回此代码。500(Internal Server Error)，服务器内部错误，表示服务器遇到错误，无法完成请求。6.根据同源策略的相关知识，选出所有与http://www.jealyn.top/js.html“同源”的网页。http://www.jealyn.top/js2.htmlhttp://jealyn.top/js2.htmlhttp://m.jealyn.top/js2.htmlhttp://www.jealyn.top:81/js2.htmlhttp://www.jealyn.top:80/js2.htmlhttps://www.jealyn.top/js2.htmlhttp://www.jealyn.top/sub/js2.html119.28.76.36/js2.html(域名所对应IP)答案：AEG。同源是指协议相同、域名相同、端口相同，就算域名与其对应IP地址也不算同源。7.非同源网页之间的哪些行为会受到限制？非同源网页之间会受到如下限制：无法读取非同源网页的Cookie、LocalStorage和IndexedDB无法接触非同源网页的DOM浏览器拒绝接受来自非同源网页发出的AJAX请求说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击前端基础练习题 第26天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>AJAX</tag>
        <tag>同源策略</tag>
        <tag>HTTP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端基础练习题 第26天]]></title>
    <url>%2Fjsexer26.html</url>
    <content type="text"><![CDATA[该篇文章是该系列的第二十六天。本文将分享一些HTTP相关习题、AJAX的书写方式以及浏览器的同源策略及同源限制。正文1.（判断题）&lt;script&gt;标签的async属性可以保证脚本的执行顺序，而defer属性无法保证先出现在页面上的脚本先执行。2.如何利用userAgent属性大致的判断用户访问设备是否为手机端，若为手机端，就跳转至m.jealyn.top，否则就访问jealyn.top？3.（判断题）http://example.com设置的Cookie可以被https://example.com读取。4.手写一段AJAX代码，该代码通过GET方式访问/example.html页面，当服务器成功返回数据时，在控制台打印返回信息，否则输出状态码和状态字符串。5.下列HTTP状态码分别代表什么意思？试简述之。200、301、401、404、5006.根据同源策略的相关知识，选出所有与http://www.jealyn.top/js.html“同源”的网页。http://www.jealyn.top/js2.htmlhttp://jealyn.top/js2.htmlhttp://m.jealyn.top/js2.htmlhttp://www.jealyn.top:81/js2.htmlhttp://www.jealyn.top:80/js2.htmlhttps://www.jealyn.top/js2.htmlhttp://www.jealyn.top/sub/js2.html119.28.76.36/js2.html(域名所对应IP)7.非同源网页之间的哪些行为会受到限制？说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击前端基础练习题第26天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>AJAX</tag>
        <tag>同源策略</tag>
        <tag>HTTP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端基础练习题第25天 答案及解析]]></title>
    <url>%2Fjsexer25-ans.html</url>
    <content type="text"><![CDATA[本篇文章是前端基础练习题第二十五天的答案及解析部分，纯题目部分请移步前端基础练习题 第25天正文1.假设HTML为1&lt;div id="d1"&gt;hello world&lt;/div&gt;则1var div1 = document.getElementById('id');div1.nodeValue = ___________，div1.firstChild.nodeValue = ___________。null、&quot;hello world&quot;。文本节点具有nodeValue属性，而元素节点没有。2.利用JS在&lt;head&gt;标签中添加一张样式表，样式表如下所示：12345&lt;style media="screen"&gt; body &#123; color: red; &#125;&lt;/style&gt;如下方两种方式所示：123456789101112// 方法1 var style = document.createElement(&#39;style&#39;);style.setAttribute(&#39;media&#39;, &#39;screen&#39;);style.innerHTML = &#39;body&#123;color:red;&#125;&#39;;document.head.appendChild(style);// 方法2var style = (function() &#123; var style = &quot;&lt;style media=&#39;screen&#39;&gt;body&#123;color:red;&#125;&lt;/style&gt;&quot;; document.head.innerHTML += style; return style;&#125;)();3.123&lt;div onClick="console.log(2)"&gt; &lt;button onClick="console.log(1)"&gt;点击&lt;/button&gt;&lt;/div&gt;点击按钮后，会在控制台先后输出______、_______，答案：1、2。若修改为123&lt;div id="outer"&gt; &lt;button id="inner"&gt;点击&lt;/button&gt;&lt;/div&gt;12document.querySelcector("#inner").addEventListener('click', () =&gt; &#123; console.log(1); &#125;, true);document.querySelcector("#outer").addEventListener('click', () =&gt; &#123; console.log(2); &#125;, true);则点击按钮后，会在控制台先后输出______、_______。答案：2、1。JS事件流的执行顺序默认为冒泡执行，即按照由里即外的顺序执行。而如果使用addEventListener，且将第三个参数设置为true，则会采用捕获执行，即自上而下的顺序执行。4.试简述什么叫做事件代理机制。事件代理是指把子节点的监听函数定义在父节点上，由父节点的监听函数统一处理多个子元素的事件。这样做的好处是只要定义一个监听函数，就能处理多个子节点的事件，如果希望阻止事件传播，可用event.stopPropagation()方法，也可使用event.cancelBubble = true来取消冒泡。5.如何取消浏览器对当前事件的默认行为？如取消点击链接的默认跳转。使用e.preventDefault()方法可以取消事件对当前元素的默认影响。该方法生效的前提是事件对象的cancelable属性为true。6.在某个input框上绑定如下所示的三个事件123456789input.onkeydown = () =&gt; &#123; console.log(1);&#125;;input.onkeyup = () =&gt; &#123; console.log(2);&#125;;input.onkeypress = () =&gt; &#123; console.log(3);&#125;;则在该input框里执行一次粘贴操作（按下Ctrl + C键），在控制台会依次输出____________；答案：2、2。在该input框里输入一个字母，则在控制台会依次输出____。答案：3、2。键盘事件的执行顺序为按下按键(keydown) -&gt; 按住按键(keypress) -&gt; 松开按键(keyup)，且keypress事件会覆盖掉keydown事件，注意keypress事件是不会监听功能键的(如Ctrl、Alt、Shift、Fn键等)。7.为什么说尽量要把script标签放在页面底部？浏览器是从上至下解析的，当发现&lt;script&gt;元素时，会将网页渲染的控制权转交给JavaScript引擎。若脚本加载时间很长，那就会造成网页长时间失去响应，浏览器会呈现“假死”状态，被称之为“阻塞效应”。将脚本放在底部，能保证页面至少可以访问，增强了用户体验，并且此时DOM结构已生成，也可以放心的进行DOM操作。说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击前端基础练习题 第25天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>DOM</tag>
        <tag>事件代理机制</tag>
        <tag>事件流</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端基础练习题 第25天]]></title>
    <url>%2Fjsexer25.html</url>
    <content type="text"><![CDATA[该篇文章是该系列的第二十五天。本文将分享一些DOM操作和JS事件相关的练习题，JS对DOM和事件的控制是平常最常见的操作类型，愿共同学习。正文1.假设HTML为1&lt;div id="d1"&gt;hello world&lt;/div&gt;则1var div1 = document.getElementById('id');div1.nodeValue = ___________，div1.firstChild.nodeValue = ___________。2.利用JS在&lt;head&gt;标签中添加一张样式表，样式表如下所示：12345&lt;style media="screen"&gt; body &#123; color: red; &#125;&lt;/style&gt;3.123&lt;div onClick="console.log(2)"&gt; &lt;button onClick="console.log(1)"&gt;点击&lt;/button&gt;&lt;/div&gt;点击按钮后，会在控制台先后输出______、_______，若修改为123&lt;div id="outer"&gt; &lt;button id="inner"&gt;点击&lt;/button&gt;&lt;/div&gt;12document.querySelcector("#inner").addEventListener('click', () =&gt; &#123; console.log(1); &#125;, true);document.querySelcector("#outer").addEventListener('click', () =&gt; &#123; console.log(2); &#125;, true);则点击按钮后，会在控制台先后输出______、_______。4.试简述什么叫做事件代理机制。5.如何取消浏览器对当前事件的默认行为？如取消点击链接的默认跳转。6.在某个input框上绑定如下所示的三个事件123456789input.onkeydown = () =&gt; &#123; console.log(1);&#125;;input.onkeyup = () =&gt; &#123; console.log(2);&#125;;input.onkeypress = () =&gt; &#123; console.log(3);&#125;;则在该input框里执行一次粘贴操作（按下Ctrl + C键），在控制台会依次输出____________；在该input框里输入一个字母，则在控制台会依次输出____________。7.为什么说尽量要把script标签放在页面底部？说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击前端基础练习题第25天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>DOM</tag>
        <tag>事件代理机制</tag>
        <tag>事件流</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端基础练习题第24天 答案及解析]]></title>
    <url>%2Fjsexer24-ans.html</url>
    <content type="text"><![CDATA[本篇文章是前端基础练习题第二十四天的答案及解析部分，纯题目部分请移步前端基础练习题 第24天正文1.js中如何检测一个变量是否为String类型？请写出函数实现。如下方代码所示：123456789// 方法1 利用typeof操作符function isString(obj) &#123; return typeof obj === &quot;string&quot;;&#125;// 方法2 利用String包装函数 (用了ES6写法)const isString = (obj) =&gt; &#123; return String(obj) === obj;&#125;2.请用js去除字符串的首尾空格。方法有很多，此处提供原生trim函数和正则表达式两种方式：123456789// 方法1 利用trim函数function myTrim(str) &#123; return str.trim();&#125;// 方法2 利用正则表达式 (用了ES6写法)const myTrim = (str) =&gt; &#123; return str.replace(/^\s*|\s*$/g, &#39;&#39;);&#125;3.如何理解闭包？闭包就是能够读取其他函数内部变量的函数。并且只有内部函数访问了上层作用域链中的变量对象时，才会形成闭包，因此，我们可以利用闭包来访问函数内部的变量。关于闭包的更多知识，可以参阅阮一峰的个人博客和这波能反杀的个人博客。4.什么是跨域？跨域请求资源的方法有哪些？跨域请求指的是请求协议、域名和端口中至少有一项不同的url的资源。常见的跨域请求有以下几种方法：window.postMessage()方法，该方法是HTML5引入的API，即跨文档通信API，其允许跨窗口通信。Proxy代理，该方法是服务器代理方法，即浏览器请求同源服务器，再由该服务器请求外部服务器，最后将结果返回给前端。JSONP，该方法是向服务器请求一个脚本，并附带一个callback参数，服务器接收请求后，将JSON数据放在函数里面并返回。WebSocket协议，服务器通过请求头信息中的Origin字段判断是否可通信。CORS，CORS是跨源资源分享的意思，其是跨源AJAX的根本解决方法，CORS允许任何类型的请求。5.$(this)和this关键字在jQuery中有何不同？答案：$(this)是一个JQuery对象，代表的是用jQuery封装后的当前对象，其能调用jQuery的方法和属性；而this则是JavaScript对象，其能调用元素属性。一般情况下，$(this)[0] = this。6.$(document).ready()方法和window.onload有什么区别？答案：window.onload是在网页中所有的元素完全加载完毕后才执行，而$(document).ready()方法可以在DOM载入就绪时就对其进行操作，而不必等到加载完成。并且$(document).ready()方法可以编写和执行多个。7.行内元素有哪些？块级元素有哪些？空(void)元素有哪些？如下所示：行内元素指的是其默认display属性值为inline，且对其设置宽高、内外边距等属性都无效的元素。如span、a、em、button、label、select等。块级元素指的是其默认display属性值为block，且独占一行的元素。如div、p、li、h1、footer、blockquote、table等。空元素又称自闭合元素，如br、meta、hr、link、input、img等。8.CSS实现垂直水平居中的方案有哪些？这里给出6种解决方案：position + margin。对父元素相对定位，子元素绝对定位，并将子元素的上、右margin值设置为其宽、高的一半的负值。此情况适用于已知元素宽高。绝对定位。对父元素相对定位，子元素绝对定位，并将top、left、right、bottom的值都设置为0，以及设置margin值为auto即可。此情况适用于已知元素宽高。position + transform。对父元素相对定位，子元素绝对定位，并设置transform: translate(-50%,-50%);即可。此情况适用于未知元素宽高。table-cell布局。对元素设置display: table-cell;和vertical-align: middle;即可。此情况适用于未知元素宽高。flex布局。将父元素设置为flex布局且添加justify-content: center;和align-items: center;属性即可。此情况适用于未知元素宽高。grid布局。将父元素设置为grid布局且对子元素添加justify-self: center;和align-self: center;属性即可。此情况适用于未知元素宽高。9.浏览器的内核分别是什么？如下所示：Trident内核，IE6-IE10以及360极速浏览器等使用。Gecko内核，Firefox浏览器使用。WebKit内核，Safari、搜狗、360等浏览器使用。Blink内核，谷歌28以后的版本和Opera15以后的版本中进行使用。Presto内核，Opera15之前的版本中进行使用。10.sessionStorage、localStorage和cookie之间的区别是什么？它们都是保存在浏览器且同源，但也有以下几点区别：数据有限期不同。sessionStorage仅在当前浏览器会话期有效，localStorage永久有效，cookie在设置的过期时间之前有效。作用方式不同。cookie数据始终在http请求中携带，而sessionStorage和localStorage仅在本地保存。存储大小限制不同。cookie数据不能超过4KB，而sessionStorage和localStorage可以达到5MB或更大。作用域不同。sessionStorage不在不同的浏览器窗口中共享，而cookie和localStorage在所有同源窗口中都是共享的。11.请说出三种减低页面加载时间的方法。减低页面加载时间总体上来说是围绕着如何减少HTTP请求和如何减少资源体积来展开，以下给出几条具体措施：合理设置HTTP缓存。恰当的缓存设置可以大大的减少HTTP请求，可以将HTTP Header中的Expires设置一个很长的过期时间。资源合并。将多个CSS文件、JS文件等合并为一个文件，也可以将图片进行合并（CSS Sprites），可以减少HTTP请求次数。将外部脚本置底。即将脚本内容在页面信息内容加载后再加载，以规避浏览器的阻塞效应。异步加载第三方资源。对于脚本文件，可进行异步加载和请求。压缩资源。如开启GZip压缩、压缩CSS文件、压缩图片资源等，以减少资源体积。使用CDN来进行对图片、视频、外部脚本等静态资源的缓存，加快网站的加载速度。图片懒加载。当图片到达视口范围时，再进行图片的加载。说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击前端基础练习题 第24天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>正则表达式</tag>
        <tag>String</tag>
        <tag>闭包</tag>
        <tag>跨域请求</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端基础练习题 第24天]]></title>
    <url>%2Fjsexer24.html</url>
    <content type="text"><![CDATA[该篇文章是该系列的第二十四天。本文分享一篇某公司的前端实习生笔试真题。该部分题目涉及到了HTML、CSS、JavaScript和jQuery的基础知识，以供大家酌情参考。正文1.js中如何检测一个变量是否为String类型？请写出函数实现。2.请用js去除字符串的首尾空格。3.如何理解闭包？4.什么是跨域？跨域请求资源的方法有哪些？5.$(this)和this关键字在jQuery中有何不同？6.$(document).ready()方法和window.onload有什么区别？7.行内元素有哪些？块级元素有哪些？空(void)元素有哪些？8.CSS实现垂直水平居中的方案有哪些？9.浏览器的内核分别是什么？10.sessionStorage、localStorage和cookie之间的区别是什么？11.请说出三种减低页面加载时间的方法。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击前端基础练习题第24天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>正则表达式</tag>
        <tag>String</tag>
        <tag>闭包</tag>
        <tag>跨域请求</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第23天 答案及解析]]></title>
    <url>%2Fjsexer23-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第二十三天的答案及解析部分，纯题目部分请移步js基础练习题 第23天正文1.1234function foo() &#123; &#125;var oldName = foo.name;foo.name = 'bar';则oldName = ___________，foo.name = ___________。答案：&quot;foo&quot;、&quot;foo&quot;函数的name属性是可读属性，尝试修改其值会静默失败。2.var foo = function bar() {}，则foo.name = ___________； var foo = function () {}，则foo.name = ___________；var foo = () => {}，则foo.name = ___________。答案：&quot;bar&quot;、&quot;foo&quot;、&quot;foo&quot;函数的name属性是指function关键字后面的标识符，若省略，则与赋值的变量名相同。3.123var foo = function bar() &#123; return 1;&#125;则foo = ___________，foo() = ___________，bar = ___________，bar() = ___________。答案：ƒ bar() { return 1; }、1、报错(ReferenceError)、报错(ReferenceError)4.&quot;1 2 3&quot;.replace(/\d/g, parseInt)的返回值为___。答案：&quot;1 NaN 3&quot;parseInt(str, base)函数接收两个参数。在本题中传入的参数分别为(1, 0)、(2, 2)、(3, 4)。5.1var lower = /^[a-z]+$/;则lower.test(null) = ___________，lower.test() = ___________，lower.test('') = ___________。答案：true、true、falsetest函数会将null、undefined、true、false转换为相应的字符串形式。6.[,,,].join(", ")的返回值为___________，[,,,].join()的返回值为___________，[,,,].join("")的返回值为___________。答案：&quot;, , &quot;、&quot;,,&quot;、&quot;&quot;Array的尾逗号可忽略。当join函数不传参数时，相当于join(&quot;,&quot;)。7.Function.length === new Function().length的返回值为___________，Array.length === new Array().length的返回值为___________。答案：false、falseFuncton\Object\Array的length值为1，而其未经过实例化的对象的length值默认为0。8.Date() === Date() = ___________，new Date() === new Date() = ___________。答案：true、falseDate()返回的是String类型，而new Date()返回Object类型。9.Array() === Array() = ___________，new Array() === new Array() = ___________。答案：false、falseArray()与new Array()返回的都是Object类型。10.Math.min() &lt; Math.max() = ___________，Math.min(Math.max()) = ___________。答案：false、-InfinityMath.min()是将传入值与Infinity中取最小值，Math.max()是将传入值与-Infinity中取最大值。11.12var a = new Date("2019-05-05");var b = new Date(2019, 05, 05);a.getDate() === b.getDate() = ___________，a.getMonth() === b.getMonth() = ____________。答案：true、false采用第二种写法时，实际上得到的应是6月。12.12345678function foo(a) &#123; var a; return a;&#125;function bar(a) &#123; var a = 'bye'; return a;&#125;则[foo('hello'), bar('hello')]的结果为___________。答案：[&quot;hello&quot;, &quot;bye&quot;]说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第23天本文的大部分题目原型取自于JavaScript Puzzlers!。大家可前往查看原题，并且还可以在线做题，查看自己的完成情况。]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
        <tag>Function</tag>
        <tag>正则表达式</tag>
        <tag>==与===</tag>
        <tag>Date</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第23天]]></title>
    <url>%2Fjsexer23.html</url>
    <content type="text"><![CDATA[该篇文章是该系列的第二十三天。本文继续分享一些怪异和生僻的JS题，该部分题目来源于JavaScript Puzzlers!。正文1.1234function foo() &#123; &#125;var oldName = foo.name;foo.name = 'bar';则oldName = ___________，foo.name = ___________。2.var foo = function bar() {}，则foo.name = ___________； var foo = function () {}，则foo.name = ___________； var foo = () =&gt; {}，则foo.name = ___________。3.123var foo = function bar() &#123; return 1;&#125;则foo = ___________，foo() = ___________，bar = ___________，bar() = ___________。4.&quot;1 2 3&quot;.replace(/\d/g, parseInt)的返回值为___________。5.1var lower = /^[a-z]+$/;则lower.test(null) = ___________，lower.test() = ___________，lower.test(&#39;&#39;) = ___________。6.[,,,].join(&quot;, &quot;)的返回值为___________，[,,,].join()的返回值为___________，[,,,].join(&quot;&quot;)的返回值为___________。7.Function.length === new Function().length的返回值为___________，Array.length === new Array().length的返回值为___________。8.Date() === Date() = ___________，new Date() === new Date() = ___________。9.Array() === Array() = ___________，new Array() === new Array() = ___________。10.Math.min() &lt; Math.max() = ___________，Math.min(Math.max()) = ___________。11.12var a = new Date("2019-05-05");var b = new Date(2019, 05, 05);a.getDate() === b.getDate() = ___________，a.getMonth() === b.getMonth() = ___________。12.12345678function foo(a) &#123; var a; return a;&#125;function bar(a) &#123; var a = 'bye'; return a;&#125;则[foo(&#39;hello&#39;), bar(&#39;hello&#39;)]的结果为___________。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.本文的大部分题目原型取自于JavaScript Puzzlers!。大家可前往查看原题，并且还可以在线做题，查看自己的完成情况。4.查看答案和解析，请点击js基础练习题第23天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
        <tag>Function</tag>
        <tag>正则表达式</tag>
        <tag>==与===</tag>
        <tag>Date</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第22天 答案及解析]]></title>
    <url>%2Fjsexer22-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第二十二天的答案及解析部分，纯题目部分请移步js基础练习题 第22天正文1.[] == false = ___________，[1] == true = ___________，[1, 2] == true = ___________，[0] == false = ___________。答案：true、true、false、true隐式类型转换，会将数组和布尔值分别转换为Number类型进行比较。Number([]) = 0，Number([1]) = 1，Number([1, 2]) = NaN。2.[] == [] = ___________，{} == {} = ___________，"" == "" = ___________。答案：false、false、true对于是引用类型的变量，其总是不相等的，如Array、Object、RegExp等。3.'2' + 3 = ___________，'2' - 3 = ___________。答案：&quot;23&quot;、-1+用在字符串中，其为拼接操作，即将Number转为String。而-是纯粹的算术运算符，其会将String转为Number。4.1 + - + + + - + 1 = ___________，1+-+++-+1 = ___________。答案：2、报错(ReferenceError)第一个表达式，按照从右向左的顺序计算即可，即1+(-(+(+(+(-(+1))))))；第二个表达式，错误的地方在于类似于1++这样的操作，自增/自减运算符不能作用在非变量上。5.Number.MIN_VALUE > 0 = ___________，Number.NaN > 0 = ___________。答案：true、falseNumber.MIN_VALUE是最小的大于0的值，Number.MIN_VALUE = 5e-324，NaN是一个特殊的值，其与任何值都不相等。6.1 &lt; 2 &lt; 3 = ___________，3 &lt; 2 &lt; 1 = ___________。答案：true、true隐式转换，(1 &lt; 2) &lt; 3即true &lt; 3即 1 &lt; 3，返回true；(3 &lt; 2) &lt; 1即false &lt; 3即 0 &lt; 3，返回true。7.1 == [1] = ___________，2 == [[2]] = ___________，0 == [[[0]]] = ___________。答案：true、true、true隐式转换。8.6.toString() = ___________，6..toString() = ___________，.6.toString() = ___________。答案：报错(SyntaxError)、&quot;6&quot;、&quot;0.6&quot;整数不能调用toString方法，而小数可以，不管它有没有省略小数的前置或后置0。9./123/ == /123/ = ___________，/123/ === /123/ = ___________。答案：false、false任意两个正则表达式都是不相等的。10.[1, 5] > [5] = ___________，[5] == [5] = ___________。答案：false、false对于第一个表达式，相当于[1, 5].join(&quot;&quot;) &gt; [5].join(&quot;&quot;)即&quot;15&quot; &gt; &quot;5&quot;，由于采用的Unicode编码，故返回false。11.{}.prototype == Object.prototype = ___________，Object.getPrototypeOf({}) == Object.prototype = ___________。答案：false、true只有function具有prototype属性。12.123function f() &#123;&#125;var a = f.prototypevar b = Object.getPrototypeOf(f);则a == b = ___________。答案：falseObject.getPrototypeOf(f) = Function.prototype。说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第22天本文的大部分题目原型取自于JavaScript Puzzlers!。大家可前往查看原题，并且还可以在线做题，查看自己的完成情况。]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
        <tag>==与===</tag>
        <tag>String</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第22天]]></title>
    <url>%2Fjsexer22.html</url>
    <content type="text"><![CDATA[该篇文章是该系列的第二十二天。本文继续分享一些怪异和生僻的JS题，该部分题目来源于JavaScript Puzzlers!。正文1.[] == false = ___________，[1] == true = ___________，[1, 2] == true = ___________，[0] == false = ___________。2.[] == [] = ___________，{} == {} = ___________，&quot;&quot; == &quot;&quot; = ___________。3.&#39;2&#39; + 3 = ___________，&#39;2&#39; - 3 = ___________。4.1 + - + + + - + 1 = ___________，1+-+++-+1 = ___________。5.Number.MIN_VALUE &gt; 0 = ___________，Number.NaN &gt; 0 = ___________。6.1 &lt; 2 &lt; 3 = ___________，3 &lt; 2 &lt; 1 = ___________。7.1 == [1] = ___________，2 == [[2]] = ___________，0 == [[[0]]] = ___________。8.6.toString() = ___________，6..toString() = ___________，.6.toString() = ___________。9./123/ == /123/ = ___________，/123/ === /123/ = ___________。10.[1, 5] &gt; [5] = ___________，[5] == [5] = ___________。11.{}.prototype == Object.prototype = ___________，Object.getPrototypeOf({}) == Object.prototype = ___________。12.123function f() &#123;&#125;var a = f.prototypevar b = Object.getPrototypeOf(f);则a == b = ___________。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.本文的大部分题目原型取自于JavaScript Puzzlers!。大家可前往查看原题，并且还可以在线做题，查看自己的完成情况。4.查看答案和解析，请点击js基础练习题第22天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
        <tag>==与===</tag>
        <tag>String</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第21天 答案及解析]]></title>
    <url>%2Fjsexer21-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第二十一天的答案及解析部分，纯题目部分请移步js基础练习题 第21天正文1.[].reduce(Math.pow)的结果为___________。答案：报错(TypeError)对空数组进行reduce操作会报错。2.[0, 1, undefined, , null, 2].filter((item) => item == undefined)的结果为___________。答案：[undefined, null]filter操作会跳过数组中的缺失值，且null == undefined的结果为true。3.[0, 1, undefined, , null, 2].map((item) => item == undefined)的结果为___________。答案：[false, false, true, , true, false]map操作不会跳过数组中的缺失值。4.[1, 2, 3].map(Math.pow)的结果为___________。答案：[1, 2, 9]在map方法中的Math.pow方法获取的是数组项和索引值，即Math.pow(1, 0)， Math.pow(2, 1)， Math.pow(3, 2)。5.12var name = 'Jealyn';console.log('Name is ' + (name === 'Jealyn') ? 'Jealyn' : 'Jinlin');则会在控制台输出___________。答案：Jealyn+的优先级比?更高。6.1234567var END = 2 ** 53;var START = END - 100;var count = 0;for (var i = START; i &lt;= END; i++) &#123; count++;&#125;console.log(count);则会在控制台输出___________。答案：死循环2 ** 53为最大安全整数，超过这一数，js不能准确判断值的大小，故会进入死循环。7.1234567var END = 2n ** 53n;var START = END - 100n;var count = 0;for (var i = START; i &lt;= END; i++) &#123; count++;&#125;console.log(count);则会在控制台输出___________。答案：101BigInt这种数据类型，可以安全的进行数据的操作。详见BigInt数据类型解析。8.0.1 + 0.2 === 0.3的结果为___________，0.2 - 0.1 === 0.1的结果为___________。答案：false、true9.123456789101112131415function caseDemo(val) &#123; switch(val) &#123; case '1': console.log('1'); break; case 1: console.log(1); break; case undefined: console.log('undefined'); break; default: console.log('Other Value'); &#125;&#125;则调用caseDemo(new String(1))会在控制台输出___________，调用caseDemo(String(1))会在控制台输出___________。答案：&#39;Other Value&#39;、&#39;1&#39;case语句采用的是===判断。new String()会生成一个Object，String()只是对基本类型值的封装。10.new Number(1) === 1的结果为___________，Number(1) === 1的结果为___________。答案：false、true11.&#39;12&#39; % 2 = ___________，-5 % 2 = ___________，Infinity % 2 = ___________。答案：0、-1、NaN12.Array.isArray(Array.prototype)的返回值为___________。答案：true说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第21天本文的大部分题目原型取自于JavaScript Puzzlers!。大家可前往查看原题，并且还可以在线做题，查看自己的完成情况。]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
        <tag>循环语句</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第21天]]></title>
    <url>%2Fjsexer21.html</url>
    <content type="text"><![CDATA[该篇文章是该系列的第二十一天。本文主要分享一些怪异和生僻的JS题，可能实际应用价值不大，不过就当娱乐放松下吧。正文1.[].reduce(Math.pow)的结果为___________。2.[0, 1, undefined, , null, 2].filter((item) =&gt; item == undefined)的结果为___________。3.[0, 1, undefined, , null, 2].map((item) =&gt; item == undefined)的结果为___________。4.[1, 2, 3].map(Math.pow)的结果为___________。5.12var name = 'Jealyn';console.log('Name is ' + (name === 'Jealyn') ? 'Jealyn' : 'Jinlin');则会在控制台输出___________。6.1234567var END = 2 ** 53;var START = END - 100;var count = 0;for (var i = START; i &lt;= END; i++) &#123; count++;&#125;console.log(count);则会在控制台输出___________。7.1234567var END = 2n ** 53n;var START = END - 100n;var count = 0;for (var i = START; i &lt;= END; i++) &#123; count++;&#125;console.log(count);则会在控制台输出___________。8.0.1 + 0.2 === 0.3的结果为___________，0.2 - 0.1 === 0.1的结果为___________。9.123456789101112131415function caseDemo(val) &#123; switch(val) &#123; case '1': console.log('1'); break; case 1: console.log(1); break; case undefined: console.log('undefined'); break; default: console.log('Other Value'); &#125;&#125;则调用caseDemo(new String(1))会在控制台输出___________，调用caseDemo(String(1))会在控制台输出___________。10.new Number(1) === 1的结果为___________，Number(1) === 1的结果为___________。11.&#39;12&#39; % 2 = ___________，-5 % 2 = ___________，Infinity % 2 = ___________。12.Array.isArray(Array.prototype)的返回值为___________。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.本文的大部分题目原型取自于JavaScript Puzzlers!。大家可前往查看原题，并且还可以在线做题，查看自己的完成情况。4.查看答案和解析，请点击js基础练习题第21天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
        <tag>循环语句</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第20天 答案及解析]]></title>
    <url>%2Fjsexer20-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第二十天的答案及解析部分，纯题目部分请移步js基础练习题 第20天正文1.当使用new命令时，实际上执行了哪些操作？答案：使用new命令时，执行了以下操作：创建一个空对象将这个对象的原型指向构造函数的prototype属性将这个对象赋值给函数内部的this关键字开始执行构造函数内部的代码2.如果指定setTimeout(f, 0)，那么f会立即执行吗？答案：不会必须要等到当前脚本的同步任务全部处理完以后才会执行setTimeout的回调函数f，也就是说f会在下一轮事件循环开始才执行。关于setTimeout的更多知识，参考MDN|setTimeout。3.12345678function f1() &#123; return new Promise(function(resolve,reject) &#123; resolve(1); &#125;);&#125;function f2() &#123; return 2;&#125;f1().then(function(){ return f2(); }).then(console.log)输出___________，f1().then(function(){ f2(); }).then(console.log)输出___________，f1().then(f2()).then(console.log)输出___________，f1().then(f2).then(console.log)输出___________。答案：2、undefined、1、2关于Promise这部分的分析，其实是比较繁琐的。记住Promise.prototype.then方法返回一个新的promise, 将以回调的返回值来resolve。关于Promise的更多信息，参考MDN|Promise。4.使用Promise完成图片的加载。编写一个preLoadImg(url)函数，其中url参数为图片的路径，当图片加载完成时，提示加载成功，否则提示加载失败。参考代码如下所示：1234567891011121314const preLoadImg = (url) =&gt; &#123; // 返回一个Promise，在其中创建图片并指定相关信息 return new Promise((resolve, reject) =&gt; &#123; let image = new Image(); image.onload = resolve; image.onerror = reject; image.src = url; &#125;);&#125;;preLoadImg(&#39;img/example.jpg&#39;) // 创建成功，则插入body尾部 .then((e) =&gt; document.body.append(e.target)) // 根据状态，执行resolve或者rejected回调 .then(() =&gt; console.log(&#39;加载成功&#39;), () =&gt; console.log(&#39;加载失败&#39;))5.当下列代码执行后，会在控制台依次输出______________________。123456789101112setTimeout(() =&gt; &#123; console.log(1);&#125;, 0);new Promise((resolve, reject) =&gt; &#123; console.log(2); resolve(3);&#125;).then(console.log);const f = async () =&gt; &#123; await console.log(4);&#125;;f().then(console.log);console.log(5);答案：2、4、5、3、undefined、1这道题牵扯到了JS的事件循环机制。简而言之呢，就是同步任务先执行，然后执行Promise的then回调，最后进入下一轮事件循环，执行setTimeout或者setInterval的回调。关于事件机制，可参考深入核心，详解事件循环机制。6.['1', '1', '1'].map(parseInt)的返回值为___________。答案：[1, NaN, 1]Array.prototype.map(item, index, arr)函数接收三个参数，即数组项、索引和整个数组。parseInt(str, base)函数接收两个参数，即要转换的字符串和转换基数。所以上面的代码拆开来就是：123parseInt(&#39;1&#39;, 0); // 返回1，基数为0，默认将基数重置为10parseInt(&#39;1&#39;, 1); // 返回NaN，基数为1，基数应大于等于2parseInt(&#39;1&#39;, 2); // 返回1，基数为27.[typeof null, null instanceof Object]的结果为___________。答案：[&quot;object&quot;, false]typeof null的结果为null，是一个特例；对任何基本类型值调用instanceof操作符，都会返回false。8.[3, 2, 1].reduce(Math.pow)的结果为___________。答案：9相当于(3 ** 2) ** 1。说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第20天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Promise</tag>
        <tag>setTimeout</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第20天]]></title>
    <url>%2Fjsexer20.html</url>
    <content type="text"><![CDATA[该篇文章是该系列的第二十天。本文的主要习题包括new命令的执行过程，setTimeout机制，Promise机制，JS事件循环机制等，希望大家有所收获。正文1.当使用new命令时，实际上执行了哪些操作？2.如果指定setTimeout(f, 0)，那么f会立即执行吗？3.12345678function f1() &#123; return new Promise(function(resolve,reject) &#123; resolve(1); &#125;);&#125;function f2() &#123; return 2;&#125;f1().then(function(){ return f2(); }).then(console.log)输出___________，f1().then(function(){ f2(); }).then(console.log)输出___________，f1().then(f2()).then(console.log)输出___________，f1().then(f2).then(console.log)输出___________。4.使用Promise完成图片的加载。编写一个preLoadImg(url)函数，其中url参数为图片的路径，当图片加载完成时，提示加载成功，否则提示加载失败。5.当下列代码执行后，会在控制台依次输出______________________。123456789101112setTimeout(() =&gt; &#123; console.log(1);&#125;, 0);new Promise((resolve, reject) =&gt; &#123; console.log(2); resolve(3);&#125;).then(console.log);const f = async () =&gt; &#123; await console.log(4);&#125;;f().then(console.log);console.log(5);6.[&#39;1&#39;, &#39;1&#39;, &#39;1&#39;].map(parseInt)的返回值为___________。7.[typeof null, null instanceof Object]的结果为___________。8.[3, 2, 1].reduce(Math.pow)的结果为___________。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第20天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Promise</tag>
        <tag>setTimeout</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第19天 答案及解析]]></title>
    <url>%2Fjsexer19-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第十九天的答案及解析部分，纯题目部分请移步js基础练习题 第19天正文1.请简述null与undefined的区别。答案：null表示一个空的对象，转为数值时为0；undefined表示一个未定义的原始值，转为数值时为NaN；undefined == null的结果为true。2.[NaN].indexOf(NaN)的返回值为___________，[NaN].includes(NaN)的返回值为___________。答案：-1、trueArray.prototype.indexOf(item)方法执行的是===（全等）判断;Array.prototype.includes(item)方法判断的是一个数组是否包含指定的值，如果是则返回true，否则返回false。3.parseInt(0.0000008)的返回值为___________，parseInt(0x11, 2)的返回值为___________。答案：8、1parseInt方法有两个参数，第一个参数为转换时的字符串，若非字符串，则先调用String()方法转为字符串；第二个参数为转换字符串采用的进制数。默认为十进制。针对上面两个题，0.0000008转为字符串为&quot;8e-7&quot;，故结果为8；0x11转为字符串，结果为&quot;17&quot;，由于该字符串采用的二进制，二进制中没有7，故停止继续转换，结果为1。4.2 ** 3 ** 2 = ___________，{} + {} = ___________。答案：512、&quot;[object Object][object Object]&quot;**的结合顺序为自右向左结合，即2 ** 3 ** 2 = 2 ** (3 ** 2) = 2 ** 9 = 512;{} + {}会调用Object.prototype.toString()方法，Object.prototype.toString({})返回&quot;[object Object]&quot;。5.请简述==与===的区别。答案：相等运算符（==）比较两个值是否相等；严格相等运算符（===）比较它们是否为同一个类型的同一个值。如果两个值不是同一类型，===直接返回false，而==会发生隐式类型转换，再进行比较是否为同一个值。由于==隐藏的类型转换会带来一些违反直觉的结果，因此建议不要使用==，最好只使用===。6.利用位操作的相关知识，实现两个变量的值的互换。答案如下所示：1234// ^为异或操作，位运算，相同为0，相异为1a ^= b;b ^= a;a ^= b;7.JS内置了哪几种错误对象(Error实例)，试分别简述之。JS定义了五种常见错误对象，如下所示：SyntaxError：表示解析代码时发生的语法错误ReferenceError：引用一个不存在的变量或将值分配给无法分配的对象时发生的错误RangeError：当值超出有效范围时发生的错误，比如数组长度为负数TypeError：指变量或参数不是预期类型时发生的错误，比如调用不存在的函数URIError：URI相关函数的参数不正确时抛出的错误8.编写一个type函数，要求其能进行精确的类型判断，如：1234type(/abcd/); // regexptype(function()&#123;&#125;); // functiontype(new Date()); // datetype([]); // array答案如下所示：12345678function type(obj) &#123; // 调用toString方法，得到形如 [object xxx]的形式 // 其中xxx就是该变量值准确的类型 var typeArr = Object.prototype.toString.call(obj); // 运用正则表达式，取出xxx这一部分 return typeArr.match(/\[object (.+)\]/)[1].toLowerCase();&#125;说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第19天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>undefined</tag>
        <tag>typeof</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第19天]]></title>
    <url>%2Fjsexer19.html</url>
    <content type="text"><![CDATA[该篇文章是该系列的第十九天。本文的主要习题包括null与undefined的区别，==与===的区别，Error对象的内置类型，typeof的高级用法等，希望大家有所收获。正文1.请简述null与undefined的区别。2.[NaN].indexOf(NaN)的返回值为___________，[NaN].includes(NaN)的返回值为___________。3.parseInt(0.0000008)的返回值为___________，parseInt(0x11, 2)的返回值为___________。4.2 ** 3 ** 2 = ___________，{} + {} = ___________。5.请简述==与===的区别。6.利用位操作的相关知识，实现两个变量的值的互换。7.JS内置了哪几种错误对象(Error实例)，试分别简述之。8.编写一个type函数，要求其能进行精确的类型判断，如：1234type(/abcd/); // regexptype(function()&#123;&#125;); // functiontype(new Date()); // datetype([]); // array说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第19天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>undefined</tag>
        <tag>typeof</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Next主题常用信息设置（三）]]></title>
    <url>%2Fnext-setting-03.html</url>
    <content type="text"><![CDATA[本篇文章介绍在Hexo框架下的Next主题中集成网站访问量插件（不蒜子），集成顶部加载条以实现加载loading状态以及设置站内搜索功能。一、前言在该系列的前两篇文章，即Next主题常用信息设置（一）、Next主题常用信息设置（二）中介绍了很多Next主题的自定义功能。本篇文章也是该系列的最后一篇文章了，将分享如何引入访问量统计功能、顶部加载条功能和站内搜索功能。二、实现访问量统计功能访问量统计功能，我们借助不蒜子脚本来实现。不蒜子的设置也相当简单，仅需一行脚本加一行标签即可。1.启用不蒜子计数功能打开主题配置文件，修改以下字段：123456789101112131415busuanzi_count: # count values only if the other configs are false enable: true # custom uv span for the whole site site_uv: true site_uv_header: 访客数 &lt;i class="fa fa-user"&gt;&lt;/i&gt; site_uv_footer: 人 # custom pv span for the whole site site_pv: true site_pv_header: 浏览数 &lt;i class="fa fa-eye"&gt;&lt;/i&gt; site_pv_footer: 次 # custom pv span for one page only page_pv: true page_pv_header: 阅读数 &lt;i class="fa fa-eye"&gt;&lt;/i&gt; page_pv_footer: 次，然后再打开blog\themes\next\layout\_third-party\analytics\busuanzi-counter.swig文件，将&lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;修改为：1&lt;script async src="//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt;即可启用不蒜子计数。效果如下图所示：其中每个子项的*_header和*_footer部分可以自定义，代表访问数字之前和之后的内容设置。2.字段含义不蒜子的计数方式有三种，即site_uv、site_pv、page_pv。三种方式的区别如下所示：site_uv：单个用户连续点击n篇文章，只记录1次访客数，可用来展示访客数量。site_pv: 单个用户连续点击n篇文章，记录n次访问量，可用来展示网页浏览数。page_pv： 单个用户点击1篇文章，本篇文章记录1次阅读量，可用来展示每篇文章的访问量。三、实现顶部加载条功能当进入页面的时候，有一个适当的loading状态展示给用户，给到访问者一个反馈，能提高浏览体验。打开主题配置文件，将pace字段设置为true，然后选择一个你喜欢的主题即可，如下所示：1234567891011121314151617# Progress bar in the top during page loading.pace: true# Themes list:#pace-theme-big-counter#pace-theme-bounce#pace-theme-barber-shop#pace-theme-center-atom#pace-theme-center-circle#pace-theme-center-radar#pace-theme-center-simple#pace-theme-corner-indicator#pace-theme-fill-left#pace-theme-flash#pace-theme-loading-bar#pace-theme-mac-osx#pace-theme-minimalpace_theme: pace-theme-mac-osx您可以挨个查看各个主题的加载效果，然后选择一个您喜欢的并应用就好了。三、设置站内搜索功能当网站内的文章数量变得越来越多的时候，有一个站内搜索功能对用户而言是十分得方便的。站内搜索功能请访问我的另一篇文章：为Hexo博客添加站内搜索功能。四、设置note样式Next拥有几种内置标签，可以方便的进行格式设置，其中Note就是其中之一，其为Bootstrap Callout。这些样式也是来源于BootStrap。其使用方式如下图所示：其中，className可以是以下字段之一：default，默认样式primary，普通样式success，成功状态信息显示info，告知或通知类信息显示warning，警告类信息danger，错误或危险操作设置是否显示图标和样式效果打开主题配置文件，修改以下代码：1234note: style: simple icons: true border_radius: 3其中style字段表示显示的样式，有simple、modern、flat和disabled可供选择，一般选择simple和modern即可。icons: true表示开启图标。下图是我上述设置下的效果：没有设置样式这是默认样式这是普通样式这是采用success的样式这是采用info的样式这是采用warning的样式这是采用danger的样式五、总结本文分享了在Next主题中引入网站访问量功能、实现顶部加载条功能以及修改Note Tag的显示效果。至此，关于Next主题的设置就告一段落了。当然，关于Next主题，还有很多很多的设置并没有提及，后面有机会的话，我再向大家分享哦。六、参考链接不蒜子脚本BootStrapNext内建标签]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo框架的Next主题引入分享功能]]></title>
    <url>%2Fshare.html</url>
    <content type="text"><![CDATA[本文会对比几种分享插件如百度分享、jiathis、多说分享，以及NeedMoreShare的差异性，并选择适当的插件集成到Hexo框架的Next主题中，实现网站和网页的分享功能。一、前言在上一篇文章中，介绍了如何在网站中引入评论系统。本文则分享如何在网站中引入分享功能，将您的网站快速分享给好友和相应社交平台。二、分享插件对比Next主题中内置了4种分享插件，下面来进行一个简单的对比。百度分享（功能强大，支持多种方式自定义，还能提升网页抓取速度，遗憾的是不支持https协议，不过可自行搜索解决方法。解决方法也很简单，强烈推荐该插件。）JiaThis（已关闭）多说分享（已关闭）NeedMoreShare2（我目前正在使用的分享插件，可方便进行自定义，推荐）三、使用NeedMoreShare2由于百度分享不支持https协议，其解决方式为把百度的分享代码本地化，即下载百度分享代码到你的本地，然后修改一些参数，具体方式参照解决百度分享不支持HTTPS的方案。不过我本人还是比较懒的，不想去这样设置，所有转而使用NeedMoreShare2。1.启用NeedMoreShare2打开主题配置文件，找到如下字段信息：12345678910111213141516needmoreshare2: enable: false postbottom: enable: false options: iconStyle: box boxForm: horizontal position: bottomCenter networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook float: enable: false options: iconStyle: box boxForm: horizontal position: middleRight networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook这部分信息就展示了对NeedMoreShare2的相关设置。注意要启用NeedMoreShare2，不仅要把最外层的enable设置为true，还要把postbottom或者float的至少一项设置为true。postbottom表示是否要在文章底部启用分享按钮，而float则表示是否为固定位置方式。可根据需要启用即可。2.字段含义在每种布局方式的配置选项中，都有iconStyle、boxForm、position、networks四个字段。它们的含义如下所示：iconStyle: 图标的样式，可选default（默认样式）和box（盒子状，每项有不同的背景色）boxForm: 分享项排列方式，可选horizontal（水平排列）和vertical（垂直排列），不过当iconStyle设置为default时，无法进行垂直排列position: 分享项位置，可选top / middle / bottom + Left / Center / Rightnetworks: 显示的社交网站名称，使用其默认的即可3.效果查看以下为我的代码设置：123456789needmoreshare2: enable: true postbottom: enable: true options: iconStyle: default boxForm: horizontal position: topCenter networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook相应效果如下图所示：四、总结本文对比并分享了百度分享和needmoreshare2这两款分享插件的区别，并讲解了needmoreshare2的配置。其实从功能上来说，我更倾向于百度分享，下次有时间我换成百度分享，再给大家介绍百度分享插件的使用吧。五、相关链接百度分享NeedMoreShare2]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo框架的Next主题引入来必力LiveRe评论系统]]></title>
    <url>%2Flivere.html</url>
    <content type="text"><![CDATA[本文将分享在Hexo框架下的Next主题中集成LiveRe（来必力）评论系统，让访问者可以在您的文章下进行留言、回复、点赞等操作，也便于作者和网站管理员及时得与用户进行交流和讨论。一、前言在前面的两篇文章，即Next主题常用信息设置（一）、Next主题常用信息设置（二）中，分享了Next主题的常用内置功能的实现。本文将继续讲解在Next主题集成LiveRe（来必力）评论系统。二、评论系统对比其实Next主题或者说Hexo框架能接入的评论系统非常多，当然了，也各有各的限制和优点。从主题配置文件里看，可以接入的评论系统有：多说评论（已关闭）Disqus（国内不能访问）Hypercomments（界面还不错，不过没有简体中文版，且登录账号不支持QQ、微信、微博等，毕竟是国外的嘛）畅言(各方面都很不错，不过必须要域名备案，如果您的域名进行了备案，可以考虑使用这个评论系统)Valine（基于Leancloud的快速、简洁且高效的无后端评论系统，也挺好用，好像并没什么限制，强烈推荐，我后期可能会改用Valine）友言评论（已关闭）LiveRe（我面前正在使用的评论系统，界面和功能翻到文章底部即可体验，除了加载和访问速度有点慢，其他功能还是相当不错的）Gitment（界面还算简介，由于是使用GitHub Issues搭建的评论系统，故只能登陆GitHub账号才能进行评论，其优点应该就是稳点吧，不用担心被关闭）三、接入LiveRe评论系统在写这篇文章前，其实我一直推荐的是LiveRe，因为其除了访问和加载速度稍许慢一些，其他地方体验确实是相当不错的。但是为了更好的完成这篇文章，我又特意去了解和体验了以上评论系统的Demo，发现Valine好像略胜一筹。后续我再接入Valine试用一段时间，再决定是否向大家推荐哈。再本篇文章中我还是继续分享LiveRe的接入和设置方式。1.注册LiveRe账号进入LiveRe官网，点击页面右上角的头像按钮，点击“登录”，然后选择“来必力注册”，进入填写相应信息即可。注意注册过程中它会发一个验证码到你填写的邮箱，该界面是韩文，你只需要在输入框中填写你收到的验证码即可。此处网速慢的同学可自行翻墙哦！2.获取livere_uid注册完成之后，点击页面顶部导航栏上的“安装”，然后选择“City版”，点击现在安装，如下图所示：然后在出现的界面中输入你的网站链接、网站名称、网站类型，此处可以任意填写的。在出现的界面中复制data-uid中的内容，如下图所示：3.配置主题文件回到项目，打开主题配置文件，将刚才复制的data-uid中的内容填写到livere_uid字段后即可，代码如下所示：123# Support for LiveRe comments system.# You can get your uid from https://livere.com/insight/myCode (General web site)livere_uid: your-data-uid4.部署与效果查看重新部署项目，执行以下命令：1hexo d -g点击一篇文章，即可看到文章底部出现了liveRe评论框，登录后可以进行评论、点赞、分享评论、回复评论等操作。如下图所示：5.禁用评论有时候，我们需要对特定页面禁用评论效果。比如说关于我页面、标签页面、分类页面等。此时只需要在source文件夹下的相应md文件的头部信息中添加comments: false即可。示例代码如下所示：12345---title: testdate: 2019-04-19 20:43:09comments: false---四、总结本文讲解了如何在Next主题下引入来必力评论系统，相信通过本文，大家也能够正确的引入来必力到自己的网站了。当然了，上述也提到了几款优秀的评论系统，我后期也会去试用体验的，下次再跟大家分享咯！五、相关链接DisqusHypercomments畅言ValineLiveReGitmentLeancloud]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Next主题常用信息设置（二）]]></title>
    <url>%2Fnext-setting-02.html</url>
    <content type="text"><![CDATA[本篇文章紧接着上文（Next主题常用信息设置（一））继续讲解Next主题常见字段的设置。一、前言在本文中，将分享对Next主题进行背景设置、侧边栏设置、文章字数统计功能设置、打赏功能开启、启用版权说明等功能。后续文章会讲解其他功能设置的，大家可以常回家看看哦。二、侧边栏设置之前对侧边栏的友情链接、社交网站链接等功能进行了设置。本次将分享设置侧边栏的位置、距离以及是否开启回到顶部功能。关键代码如下所示：123456789101112sidebar: # Sidebar Position, available value: left | right (only for Pisces | Gemini). position: left # Sidebar offset from top menubar in pixels (only for Pisces | Gemini). offset: 12 # Back to top in sidebar (only for Pisces | Gemini). b2t: false # Scroll percent label in b2t button. scrollpercent: false由于我是采用的Pisces，所以只分享了有关Pisces的部分。其实这部分的设置一般为默认即可。回到顶部功能一般是另外进行设置的，并不会放在侧边栏中。三、背景设置Next主题内置了几种背景特效，我实测了一下，效果还是不错的，挺炫酷的。而且设置起来超级简单。几种背景动画方式如下所示：12345678910111213141516171819202122# Canvas-nestcanvas_nest: false# three_wavesthree_waves: false# canvas_linescanvas_lines: false# canvas_spherecanvas_sphere: false# Only fit scheme Pisces# Canvas-ribbon# size: The width of the ribbon.# alpha: The transparency of the ribbon.# zIndex: The display level of the ribbon.canvas_ribbon: enable: false size: 300 alpha: 0.6 zIndex: -1注意这几种背景动画方式只能同时设置一个，即只能有一个为true的状态。并且开启背景动画稍微有一点点的影响页面加载和响应速度，大家可以酌情使用。四、开启文章字数统计功能要开启字数统计功能，首先先安装相应插件：hexo-wordcount。在项目根目录下打开GitBash，输入以下命令，即可安装hexo-wordcount插件：1npm install hexo-wordcount --save然后打开主题配置文件，进行如下设置即可：123456post_wordcount: item_text: true # 是否显示文字 wordcount: true # 是否开启字数统计 min2read: true # 是否显示阅读时长 totalcount: false # 是否显示网站总字数，通常设为false separated_meta: true # 是否折行显示按照以上配置的设置效果如下图所示：五、添加打赏功能创作不易，原创更是值得鼓励。现在越来越多的博客系统推出了打赏功能，Next主题也当然支持。以下是我的示例代码：1234# Rewardreward_comment: 创作十分不易，原创更应鼓励wechatpay: /images/wechatpay.pngalipay: /images/alipay.png效果图如下所示：reward_comment参数是显示在打赏按钮上面的描述文字，wechatpay和alipay则是微信支付和支付宝支付所对应的收款二维码。注意以上我的两个二维码图片地址位于blog/themes/next/source/images/下。注意鼠标放到二维码图片上，下方的文字默认有一个晃动效果，不太美观。要取消该效果的话，打开blog\themes\next\source\css\_common\components\post\post-reward.styl文件，删除以下代码即可：1234567891011121314151617181920212223#wechat:hover p&#123; animation: roll 0.1s infinite linear; -webkit-animation: roll 0.1s infinite linear; -moz-animation: roll 0.1s infinite linear;&#125;#alipay:hover p&#123; animation: roll 0.1s infinite linear; -webkit-animation: roll 0.1s infinite linear; -moz-animation: roll 0.1s infinite linear;&#125;#bitcoin:hover p &#123; animation: roll 0.1s infinite linear; -webkit-animation: roll 0.1s infinite linear; -moz-animation: roll 0.1s infinite linear;&#125;@keyframes roll &#123; from &#123; transform(rotateZ(30deg)); &#125; to &#123; transform(rotateZ(-30deg)); &#125;&#125;六、添加版权功能Next主题允许我们在文章末尾添加我们的版权信息，相关代码设置如下所示：12345# Declare license on postspost_copyright: enable: false # 启用版权，改为true即可 license: CC BY-NC-SA 3.0 license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/以下是启用版权声明的示意图：七、总结本文讲解了Next主题的侧边栏设置、打赏信息设置、版权声明、字数统计等功能，我们的网站实用性得到了进一步提升。下一篇文章将讲述如何在Next主题引入来必力LiveRe评论系统。八、相关链接hexo-wordcountBY-NC-SA 3.0]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Next主题常用信息设置（一）]]></title>
    <url>%2Fnext-setting.html</url>
    <content type="text"><![CDATA[在上一篇文章中，我讲述了如何对站点信息进行设置，设置了如网页标题、关键字、描述、链接格式等参数。在本文中，则将分享如何对Next主题进行常见的设置，如设置菜单、图标、友情链接等等。一、前言Next主题拥有非常个性化和众多的设置，一篇文章是远远分享不完的。在本文中，只分享几个最常用的信息设置，关于其他内容的设置，后续文章将会继续分享的，希望大家持续关注哦。二、菜单部分的设置Next主题默认开启的菜单是home和archives，即首页和归档。Next主题菜单示例配置如下所示：123456789menu: home: / || home #about: /about/ || user #tags: /tags/ || tags #categories: /categories/ || th archives: /archives/ || archive #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat通过取消掉前面的#，即可启用该项菜单。其菜单项格式为menu-name: link || icon。menu-name为菜单项的名字，link为点击菜单所跳转的链接，icon为菜单对应的图标。Next主题所使用的图标是来自Font Awesome提供的。当然了，除了home和archives菜单项，其他的菜单项都需要手动创建页面才行，输入以下命令，即可创建新页面，其中menu-name为创建菜单项的名字。1hexo new page menu-name通过menu_icons字段也可决定是否启用图标。12menu_icons: enable: true # 启用菜单图标启用所有默认菜单项且采用默认图标的菜单栏如下图所示：三、社交网站链接设置Next主题允许我们方便得在侧边栏放置我们的社交链接，不过其内置的大多是外国常用的社交网站，我们还得自己增添一些信息。社交链接的字段为social字段。其子项格式为social-item: link || icon，其中social-item为社交网站名称，如微博、知乎等（可使用中文），link为社交网站链接，icon为图标，同样是Font Awesome提供的。下面是设置举例：1234567social: GitHub: your-github || github Email: your-email || envelope CSDN: your-csdn-blog || edit 微博: your-weibo || weibo 人人网: your-renren || renren 领英: your-linkedin-in || linkedin效果如下图所示：当然了，通过以下字段也可决定是否启用图标和是否只显示图标等信息。1234social_icons: enable: true icons_only: false transition: false四、页脚信息设置Next主题的页脚部分默认展示了Hexo信息和Next主题信息。虽然说表明这部分信息是该被提倡的，但是确实不怎么美观，如下图所示：下面我们来取消掉，如下代码所示：12345678footer: since: 2015 # 网站搭建于何年 icon: user copyright: powered: false # 取消 由Hexo强力驱动 字样 theme: enable: false # 禁止显示主题 version: false # 禁止显示版本改了之后看着就清爽了一些了。上述还对网站的版权信息进行了设置，copyright字段不设置则默认为author字段的值。五、友情链接设置对于一个博客网站而言，友情链接也是很重要的一个版块，大胆的引入友情网站吧，别担心会丢失流量。您想成为我的友链一员吗？请给我发送邮件jealyn.wang@xgimi.com，我审核通过后，会将您的网站加入我的友情链接列表哟！以下是友情链接部分示例代码：12345678# Blog rollslinks_icon: linklinks_title: 友情链接links_layout: inlinelinks: 百度: https://www.baidu.com 谷歌: https://www.google.com 腾讯: https://www.tencent.com其中links_layout为链接项的布局方式，有两个值，即block和inline。block方式是一行放置一个，inline方式是一行放置多个。links_icon和links_title为自定义的友情链接区图标和标题。我的设置示例如下图所示：六、作者头像设置作者头像设置方式相对比较简单，如下代码和注释所示：1234# Sidebar Avatar# in theme directory(source/images): /images/avatar.gif# in site directory(source/uploads): /uploads/avatar.gifavatar: /images/avatar.gif头像图片文件有两种存放方式，如果存放在主题目录（即blog/theme/next/source/images/）下，就采用/images/avatar.gif的方式引入；如果存放在站点source目录（即blog/source/uploads/）下，则采用/uploads/avatar.gif。不过我个人还是推荐第一种设置方式，并建议所有图片按此方式放置（不过后面会讲解放到腾讯云上）。七、总结本文讲述了Next主题的几项基础的设置，能提升网站的美观度和实用性。下面一篇文章将继续讲解Next主题的其他几项设置，比如说文章字数统计、打赏功能、背景设置等等。八、相关链接Font AwesomeNext使用文档]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[站点基本信息设置]]></title>
    <url>%2Fsite-setting.html</url>
    <content type="text"><![CDATA[在上一篇教程中，我讲述了如何安装和启用Next主题。而在本文中，我则会分享如何对站点的基本信息进行设置，如关键词、作者、网站描述以及链接格式等，该部分会影响网站的SEO，建议大家都做好相应的设置。一、前言我们已经搭建好了Hexo框架，也安装了Next主题。但是还有一些比较实用的功能是没有配置和启用的，我们的站点信息也并没有根据自身情况合理进行的设置。本篇文章就围绕站点基本信息设置进行展开。二、站点信息设置1.网站信息设置网站信息的字段和简要说明如下所示：字段说明title网站的标题subtitle网站的副标题description对网站的简要描述keywords网站的关键词，多个关键词之间可用,进行分割author网站的作者language网站语言，简体中文为zh-Hanstimezone网站使用的时区，北京时间为Asia/Shanghai其中的title、description、keywords字段强烈建议设置，这有利于网站的SEO。打开站点配置文件，对这些属性进行设置吧，下图是我的设置方式示例，以提供参考：设置完成后，页面中显示效果与相应字段的对应关系如下图所示：注意其中的description字段，一般不需要显示在页面左侧sidbar处，所以我们需要进行修改。打开主题配置文件，参照以下代码即可进行修改。12seo: truesignature: 你的个人签名或简短描述 2.url部分设置网站的url部分设置，主要是标示该网站的网址、目录、链接形式等相关参数。参数描述如下所示：字段说明url网址root网站的根目录permalink文章的永久链接格式permalink_defaults永久链接中各部分的默认值这部分，主要说一下permalink参数，permalink的默认格式为:year/:month/:day/:title/。什么意思呢。就是假如我在2019年4月13日创建了一篇名为test的文章，则该文章的访问链接为/2019/04/13/test/。这种形式也太过繁琐了，所以我个人把它修改为了:title.html的格式，即刚才那篇文章，我的访问链接就变为/test.html了，简洁了许多，该字段强烈建议大家修改。我的该部分设置如下所示，仅供参考。123456# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://www.jealyn.toproot: /permalink: :title.htmlpermalink_defaults:3.其它部分设置目前，其它部分的内容我们可保持默认即可，一般也并不会去修改。当然，如果您确实想要了解其他字段的含义，可以查阅Hexo配置文档。在我的另一篇文章中，即为博客添加站内搜索功能中，会在主题配置文件中增加一个字段，详情见该文章所示。三、总结在这篇文章中，我分享了如何进行站点信息的设置。如设置文章链接格式、设置网站标题、作者、关键词、描述等信息。这些内容的设置，对着网站的SEO和可访问性的帮助是很大的。在我的下一篇文章中，将讲解如何进行Next主题的个性化设置，将会大大增强网页效果和用户体验。四、相关链接Hexo站点配置文件文档时区列表永久链接格式Next支持的语言列表]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[更换Hexo框架主题为Next主题]]></title>
    <url>%2Fnext-theme.html</url>
    <content type="text"><![CDATA[Hexo框架默认使用的是landscape主题，该主题的显示效果其实大多数人是不太喜欢的。相比之下，Next主题给人的感觉则比较简洁、清爽，其在移动端的布局效果也是相当之好的，并且修改起来也十分的方便。我的这个个人网站使用的就是Next主题，本文就将介绍如何安装和配置Next主题。一、前言Hexo具有非常多的主题可供选择，在这其中，Next主题深受很多使用者的喜爱。当然，萝卜青菜各有所爱，您可以在Hexo主题列表中选择您喜欢的主题进行设置。不过，Next主题确实是我特别安利的一款主题。二、Next主题安装配置1.安装Next主题在Hexo中进行主题的安装，是非常简单和容易的。具体到Next主题，只需要在项目根目录下（我的为blog）打开Git Bash，输入以下命令，即可完成Next主题的安装。1git clone https://github.com/iissnan/hexo-theme-next themes/next2.Next主题结构当Next主题下载安装完成后，可以看到，在项目根目录下的thems文件夹内，多了一个next文件夹，这就是刚才下载的next主题，进入next文件夹，我们看到，其项目结构如下所示：123456.├── _config.yml├── languages├── layout├── scripts└── source在这里，各位朋友们，有两个概念一定要弄清楚。在某个主题下的_config.yml文件，我们通常称之为主题配置文件。而在项目根目录下的_config.yml文件，则称之为站点配置文件。后续文章会经常提到这两个名词，请大家注意区分。位于项目根目录下的_config.yml文件，称为站点配置文件；位于/themes/theme/下的_config.yml文件，称为主题配置文件。3.启用并设置Next主题打开站点配置文件，找到theme字段，将其（从原来的landscape）修改为next即可启用Next主题。1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next然后打开Next主题的主题配置文件，找到scheme字段，选择Pisces Scheme。Next主题提供了4种不同的外观，您可以挨个测试，看您更喜欢哪一个效果。我个人选择的是Pisces。12345# Schemes#scheme: Muse#scheme: Mistscheme: Pisces#scheme: Gemini4.查看并验证效果分别输入以下命名，即可查看和验证Next主题效果：12hexo cleanhexo s -g在Pisces下，效果如下图所示：当然了，Next主题还可以进行很多自定义的设置，可查看Next官方文档。三、总结本文讲解了如何进行Next主题的安装和启用，通过使用Next主题，网站已经呈现出一种清爽、简洁之美。在下一篇文章中，我将介绍如何对网站进行个性化的设置，如设置作者、网站标题、url形式等等。四、参考链接Hexo主题列表Next官方文档GitHub Next项目Hexo官方文档]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[域名申请与绑定到Coding Pages]]></title>
    <url>%2Fdomain-binding.html</url>
    <content type="text"><![CDATA[在Hexo建站系列的前两篇文章中，我分别分享了如何安装和新建Hexo项目以及将Hexo项目部署到Coding。这篇文章则是讲述如何申请属于自己的自定义域名以及将其绑定到Coding Pages上，从此，就可以通过自定义域名访问您的网站了。一、前言在将Hexo项目部署到Coding这篇文章里，我提到过，当我们的项目推送成功并开启Pages服务后，其访问地址为username.coding.me/projectname。当然，当你的projectname与username相同的时候，其访问地址可以简化为username.coding.me。不过对于很多人来说，这样的url还是会让人觉得比较千篇一律，如果访问地址形如username.com、iamwho.net等是不是一下就觉得富有个性化一些了呢？本文就讲述如何进行个性化的域名绑定。二、域名申请在国内，主要的域名注册商为腾讯云和阿里云（万网），它们的官网和域名申请地址如下所示。腾讯云官网、腾讯云域名注册阿里云官网、阿里云域名注册您可以根据自己的喜好，选择相应的网站和喜欢的域名进行申请注册即可。我个人是选择的阿里云（万网）进行域名注册，对象存储选择的是腾讯云。关于域名申请和后续的实名认证操作之类的，本文就不进行讲解了，在相应的域名申请网站查看帮助文档即可。三、域名解析与绑定1.进入域名解析设置页面确保您已经获得了您的自定义域名，现在，我们来将它绑定到Coding上吧，以下，我以阿里云为例，演示域名解析流程。进入阿里云官网，点击页面顶部右上角的“控制台”，然后登录，进入到管理控制台。展开页面左侧的菜单栏，选择“域名”，然后在你的相应域名下，点击解析，进入到解析设置页面。点击“添加记录”按钮，在这里我们需要添加两条解析记录。2.添加解析记录我们需要添加两条解析记录，解析记录1如下图所示：注意记录类型为A，主机记录为@，解析线路选择默认，记录值为你Hexo项目所部署到Coding Pages的IP地址，可以通过ping得到。如我的Coding仓库为jealyn.coding.me，则打开cmd（win + R，然后再输入cmd），输入ping jealyn.coding.me，结果如下图所示：取出其中的150.109.112.233作为记录值即可。解析记录2如下图所示：注意记录类型为CNAME，主机记录为www，解析线路选择默认，记录值为你Hexo项目所部署到Coding Pages的访问地址，如我的为jealyn.coding.me。3.Coding绑定自定义域名打开Coding的Pages服务，进入设置页面，为网站绑定自己的域名。添加刚才解析的两条记录，如下图所示：4.开启HTTPS强制访问为了保证数据传输的安全，防止传输内容被第三方冒充或篡改，我建议尽可能得开启HTTPS强制访问。四、总结通过以上的操作，现在，就可以通过自定义的域名访问您的个人网站了，一下就感觉高大上了有不有！至此，网站的配置和域名的绑定就讲解完毕了。但是我们的网站还有一个很大的问题，那就是样式很丑呀，实在不愿多看。下一篇文章，我就会讲解Hexo的主题选择和配置，经过改进后，网站看着就会赏心悦目许多。希望继续关注我的文章哦！五、相关链接腾讯云官网阿里云官网Coding官网]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[将Hexo项目部署到Coding]]></title>
    <url>%2Fhexo-deploy.html</url>
    <content type="text"><![CDATA[在上一篇教程中，我讲解了如何安装Hexo以及如何新建一个Hexo项目，并且在本地查看和预览效果。但是我们开发个人网站或者写博客的目的是为了上传到互联网上进行共享。考虑到我们的网站是静态类型，并不需要单独买服务器和空间，故放在一个代码托管平台是一个不错的选择。一、前言比较流行的代码托管平台有GitHub、Coding、GitLab等。本次我选择的是将代码部署到Coding上，其实很多的教程都会建议把代码部署到GitHub上，然后利用GitHub提供的GitHub Pages功能实现。我之前也部署在Git上，不过发现了一些问题，而且是难以解决的问题之后，我不建议大家再利用GitHub Pages，原因如下：GitHub的服务器在国外，访问速度较慢。如果我们的个人网站或博客的面向对象是以国内用户，那么访问速度确实会受到一定的影响，使得用户体验不是很好。GitHub不支持百度爬虫，这也就意味着百度不会收录你的个人网站。用户就无法通过关键词的形式搜索到你的网站，这对于一个网站的SEO可以说是致命的打击。而Coding不存在上述的问题，并且使用也很方便，并且是中文的操作界面，于是我果断选择了Coding。二、Coding项目建立1.Coding账号注册登录Coding官网，选择右上角的“个人版登录”，进行登录或者注册，注册流程就不细述了。在注册过程中，会提示“Coding.net 已全面升级为腾讯云开发者平台。……”，点击立即注册即可。2.新建Coding项目注册登录之后，建议修改一下自己的用户名，改成一个方便自己记忆或者对自己有着意义的名字。然后点击顶部栏上的`+`，选择项目，进行项目的新建。在新建项目页面其实只需要填写一个项目名称，其他的就按照默认的即可。建议此处的项目名称仍然选择具有意义的名称。如下所示： 点击页面底部的新建项目按钮就完成了项目的新建了。三、推送网站1.完善站点配置文件打开项目（我的为blog）根目录下的站点配置文件_config.yml，滚动到页面最底部，完善deploy字段，如下所示：1234deploy: type: git repo: https://git.dev.tencent.com/username/projectname.git branch: master各位小伙伴务必注意，根目录下的_config.yml，为站点配置文件，这个概念后面会经常用到。配置文件中的:为英文半角，且:后都有一个空格，千万不要输错和忽略。repo字段中的username为你的用户名，projectname则为你的项目名，为防止出错，可从Coding上复制该字段。2.安装Git部署插件在项目根目录下打开Git Bash，输入以下命令：1npm install hexo-deployer-git --save即完成了Git部署插件的安装。3.推送网站当完成Git部署插件的安装和站点配置文件的编辑时，我们再在Git Bash输入以下的命令：12hexo cleanhexo d -g即完成了网站的推送。此时回到Coding，则发现项目中已经有了推送的文件和代码了。四、开启Pages服务进入相应项目，点击页面左侧的“代码”下的“Pages服务”，如图所示：然后在出现的界面中勾选选择框，并点击“一键开启Coding Pages”，即可开启Pages服务。点击访问地址后面的链接，即可查看你的个人网站效果。记住，该链接就是你的个人网站地址，其形式为：username.coding.me/projectname。另外，当你设置的projectname与username相同的时候，其访问地址可以简化为username.coding.me。现在知道为什么我推荐大家好好选择username和projectname了吧。五、总结本文介绍了如何在Coding上新建一个项目，讲解了如何将Hexo项目部署到Coding，以及如何在Coding上开启Pages服务。通过本文的介绍，小伙伴们应该能进行网站的推送了。赶快把你的链接分享给周围的朋友吧，目前为止，你已经可以进行你的创作和发布了。后续的文章主要是讲解如何进行自定义域名的绑定以及网站样式的自定义和网站的相关优化。六、相关链接Coding官网Hexo部署]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[公告]]></title>
    <url>%2Fnotice.html</url>
    <content type="text"><![CDATA[该页面为本网站的信息公告页面。当网站的结构发生比较大的变化或者增加了某些功能时，我都会在此页面进行简要的说明。这倒有点类似GitHub项目的README.md文件，该页面会一直处于置顶状态。如果想了解本网站的最新动态和近期计划，就快到碗里来吧！Hello，欢迎来到我的个人网站。本网站是我的一片小天地，该网站的定位为技术分享。我是一名前端开发工程师，因此我可能会更多得分享前端方向的一些知识和技术，面向对象为前端入门者和初级开发者。如果您感兴趣，可以收藏本站，以备后用。本页面毕竟不是关于我(About Me)页，就不做过多的自我介绍啦，哈哈。如引言所述，本页面是起到一个通知和公告的作用，告知访问者该网站近期发生或者即将发生哪些比较重要的变化。非定期更新内容 时间：2019年5月14日至2019年5月17日 详情：由于我近期忙于毕业设计以及毕业答辩的事情，故无法保证每天更新博客。另JS基础练习题板块更名为前端基础练习题，以后我也会分享一些HTML、CSS、jQuery等方面的题目。 相关链接：前端基础练习题 状态：未完成五一期间停止更新内容 时间：2019年4月30日至2019年5月04日 详情：4天五一小长假将至，首先祝大家节日快乐，幸福美满！偷得浮生半日闲，在这几天中我也回老家了，就暂不更新博文了。祝大家玩得愉快~ 相关链接：hexo博客搭建与优化、JS基础练习题 状态：已完成继续更新JS基础练习题 时间：2019年4月22日至2019年4月30日 详情：由于写博客搭建与优化专栏停止了大概10天左右的JS习题的更新，现在重新恢复更新了。不过由于近期上班工作任务较重，习题和答案就分开更新了。即当日更新习题，次日再撰写答案。还望各位小伙伴体谅！谢谢咯！ 相关链接：hexo博客搭建与优化、JS基础练习题 状态：已完成添加网站搭建及优化专栏 时间：2019年4月10日至2019年4月20日 详情：我的这个网站也折腾了近一个月了，在网站搭建和维护过程中也有一些心得和挖坑记录，所以我想在一个专栏里分享一下我的网站搭建、维护和优化过程中的一些技巧和方式 相关链接：hexo博客搭建与优化 状态：已完成暂时停止更新JS基础练习题 时间：2019年4月10日至2019年4月20日 详情：由于近期想做网站的SEO以及想分享一下我博客的搭建过程，故暂时先不更新JS练习题了，预计4月21日会继续更新JS练习题 相关链接：JS基础练习题 状态：已完成]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hexo安装并撰写你的第一篇文章]]></title>
    <url>%2Fhexo-create.html</url>
    <content type="text"><![CDATA[Hexo是一个进行博客搭建和开发的框架，它的操作和配置相对来说非常得简单，也很受欢迎。本文讲解如何进行Hexo框架的安装、Hexo常见的几条命令操作以及利用Hexo编写自己的第一篇文章。一、前言Hexo是一个十分轻量和流行的博客框架，其官方中文文档地址为https://hexo.io/zh-cn/docs/。我的个人网站当然也是采用的Hexo进行搭建的。二、安装1.安装前提要进行Hexo的安装，则你的电脑里必须要安装Node.js和Git，不过本文暂不讲解这两个程序的安装说明，下面给出两个软件的官方网站以及安装参考教程。Node.js中文官网 （注意至少需安装Nodejs 6.9以上的版本），Node.js安装配置Git官网，Git安装配置2.安装Hexo确保您的电脑上已安装配置好了Node.js和Git，接下来进行Hexo的安装就相当简单了，通过调出命令行(cmd窗口），输入以下命令，即可安装Hexo。1npm install -g hexo-cli三、Hexo常用命令Hexo的常用命令很少，我经常用到的，也不过只有5、6条命令，并且非常好记。下面一一讲解之。1、hexo init 命令该命令是用来初始化项目的，只有在新建项目时会用到，其使用格式为 hexo init folder，其中folder为你的项目名，常用的有blog、web、website等。2、hexo new 命令该命令用于生成一篇文章，使用方法为 hexo new [layout] your_article_name 。若是省略layout参数，则以默认的方式进行布局。3、hexo clean 命令该命令用于清除缓存，使用该命令会清除掉项目文件夹下的public文件夹，使用方式为hexo clean。4、hexo g 命令该命令用于生成public文件夹中的内容，使用该命令会更新项目文件夹下的public文件夹，使用方式为hexo g。5、hexo s 命令该命令用于生成启动服务预览，成功执行该命令，在浏览器中输入localhost:4000，即可预览你的网站，使用方式为hexo s。6、hexo d 命令该命令用于部署，即将本地内容部署到设置的服务器上，使用方式为hexo d。7、其他命令关于Hexo其他命令及更详细的介绍，请访问hexo官网指令讲解。四、构建Hexo项目Hexo安装完成后，在你需要构建项目的文件夹下，进行Hexo项目的搭建。我是在G盘下进行操作的。1、启动Git Bash进入相应盘符或者文件夹下，点击空白处，在出现的菜单中选择Git Bash Here，即可启动Git Bash。2、初始化项目并安装依赖在启动的Git Bash中依次执行以下命令。123hexo init blogcd blognpm install注意其中的blog可以替换为其他字符串，推荐使用blog、website、web等，即根据功能来命名。cd命令是切换目录的意思。npm install命令会安装项目所需的依赖包，安装完成后，会在项目文件下生成一个node_modules目录。3、新建一篇文章当项目搭建完成之后，就可以写文章咯。通过Git Bash，执行以下命令，则可以新建并生成一则篇名为test的文章。1hexo new test注意该篇文章默认采用的布局为post布局，新建的文章路径为blog\source\_posts\test.md，生成的文件路径为blog\public\年\月\日\test\index.html。4、启动本地预览执行以下命令，然后打开浏览器，在地址栏中输入localhost:4000，则会看到刚生成的页面。1hexo s页面效果如下所示：5、编辑文件打开刚才新建的文件，即blog\source\_posts\test.md，我们插入以下内容：这是我的第一篇文章，采用hexo框架搭建而成的，我也有自己的个人博客了。保存文件，刷新一下网页，再次查看效果如下：五、总结博客的搭建与新建文章的方法到此就介绍完毕了，各位看官应该能够新建和编辑文章了。顺便一提，Hexo的文章编辑采用的是MarkDown语法，不熟悉该语法的朋友，可以访问MarkDown语法说明进行学习。当然，目前的网站存在很大的不足：只能在本地查看。博客也好，个人网站也好，应该是共享的，只能在本机上访问，又有何乐趣呢？页面样式丑陋。这个网站的外观和布局，确实让人看着有点难受呀。没有互动功能。博客类网页常见的评论留言、友情链接、打赏、分享功能没有，互动性不强。在下一篇文章中，将讲解如何将项目部署到Coding上，让所有用户都能搜索查看。后面的文章中， 将逐一改善以上提到的不足之处。六、相关链接Hexo中文文档Node.js中文官网Git官网MarkDown教程]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为博客添加站内搜索功能]]></title>
    <url>%2Flocal-search.html</url>
    <content type="text"><![CDATA[当我的博客文章和练习题发表得比较多的时候，要查询哪些习题是我曾经整理过的，就变得比较复杂和麻烦了，我们不可能一个一个文件的挨着去找。为了方便读者查询相应的题目以及为了我能快速定位我整理过哪些习题，故添加了站内搜索功能。一、前言我的博客采用的是hexo进行搭建，选择的是next主题。而next主题其实也集成了几种搜索插件，我采用的是local-search插件。此插件会生成一个search.xml文件，其中包含了你网站上所有相关的数据，搜索的时候就从这个文件中根据关键字检索出相应的链接。二、安装在项目的根目录下，通过cmd或者Git Bash执行下面这条命令以安装hexo-generator-searchdb插件。1npm install hexo-generator-searchdb --save三、配置1、修改站点配置文件打开站点配置文件，即根目录下的_config.yml文件，添加以下代码：12345search: path: search.xml field: post format: html limit: 10000注意冒号和空格的处理。这些参数都是可以修改的，不过默认设置为这样就行了，一般也不需要修改。如果要修改，请查看hexo-generator-searchdb配置参数。2、修改主题配置文件打开主题配置文件，即themes/next下的_config.yml文件，将local_search下的enable修改为true，即启用local_search插件。12local_search: enable: true四、部署执行上述步骤后，再运行以下命令，部署上去，就可以看到在页面上有一个搜索图标，点击并输入相关文字，就可以看到搜索结果，点击即可跳转到对应页面，十分方便。1hexo d -g]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第18天 答案及解析]]></title>
    <url>%2Fjsexer18-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第十八天的答案及解析部分，纯题目部分请移步js基础练习题 第18天正文1.12345var x = 1; function f(n) &#123; n = n + 1;&#125;y = f(x);上述代码运行后，y的值为___________。答案：undefined2.以下代码运行后，arr的结果为___________，arr2的结果为___________。123var arr = [1, 2]; var arr2 = arr.concat(); arr2.push(arr.splice(1, 1, 3)); 答案：[1, 3]、[1, 2, [2]]splice()方法会改变原数组且返回值为所有删除的元素组成的数组。3.找出数组[-1, -2, 1, 10, 4, 5, 8]中的最大值，至少写出两种方法。代码如下所示：1234567891011121314151617// 方法1：利用Math.max()var arr = [-1, -2, 1, 10, 4, 5, 8];Math.max.apply(null, arr);// 方法2：先降序排序，然后取出第一个值，即为最大值var arr = [-1, -2, 1, 10, 4, 5, 8];arr.sort((a, b) =&gt; b - a);arr[0];// 方法3：利用for循环取出最大值var arr = [-1, -2, 1, 10, 4, 5, 8];var max = -Infinity;for (var i = 0; i &lt; arr.length; i++) &#123; if(max &lt; arr[i])&#123; max = arr[i]; &#125;&#125;4.封装一个函数，将字符串&quot;js-exercise-day-eighteen&quot;从第二个单词开始首字母大写，然后拼成字符串 &quot;jsExerciseDayEighteen&quot;，并返回。（注意：封装成一个函数）代码如下所示：1234567891011121314151617// 方法1：数组和字符串的来回转换function transToCamel(str) &#123; var str_arr = str.split(&quot;-&quot;); for (var i = 1; i &lt; str_arr.length; i++) &#123; str_arr[i] = str_arr[i].slice(0, 1).toUpperCase() + str_arr[i].slice(1); &#125; return str_arr.join(&quot;&quot;);&#125;transToCamel(&quot;js-exercise-day-eighteen&quot;);// 方法2：利用正则表达式的相关知识function transToCamel(str) &#123; return str.replace(/-(\w)/g, function($0, $1) &#123; return $1.toUpperCase(); &#125;)&#125;transToCamel(&quot;js-exercise-day-eighteen&quot;);5.用js实现类似下列Python代码所呈现出的效果，list(range(1,101))[::2]。答案：如下方代码段所示1234var arr_find_odd = new Array(100) .fill(&quot;&quot;) .map((item, index) =&gt; index + 1) .filter((item) =&gt; item % 2 == 1);上述Python代码段的意思是创建一个从1到100的列表，并筛选出其中的奇数值。6.1var str = "It's humorous,you'll feel heart-broken!";则str.split("").reverse().join("")的结果是___________。答案：&quot;!nekorb-traeh leef ll&#39;uoy,suoromuh s&#39;tI&quot;7.利用正则表达式的相关知识实现内置的trim()方法。答案：如下方代码段所示123function myTrim(str) &#123; return str.replace(/(^\s+)|(\s+$)/g, &quot;&quot;);&#125;说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第18天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第18天]]></title>
    <url>%2Fjsexer18.html</url>
    <content type="text"><![CDATA[在本栏中，我将记录一些JavaScript基础练习题，提升大家对JS的理解。该篇文章是该系列的第十八天。正文1.12345var x = 1; function f(n) &#123; n = n + 1;&#125;y = f(x);上述代码运行后，y的值为___________。2.以下代码运行后，arr的结果为___________，arr2的结果为___________。123var arr = [1, 2]; var arr2 = arr.concat(); arr2.push(arr.splice(1, 1, 3)); 3.找出数组[-1, -2, 1, 10, 4, 5, 8]中的最大值，至少写出两种方法。4.封装一个函数，将字符串&quot;js-exercise-day-eighteen&quot;从第二个单词开始首字母大写，然后拼成字符串 &quot;jsExerciseDayEighteen&quot;，并返回。（注意：封装成一个函数）5.用js实现类似下列Python代码所呈现出的效果，list(range(1,101))[::2]。6.1var str = "It's humorous,you'll feel heart-broken!";则str.split(&quot;&quot;).reverse().join(&quot;&quot;)的结果是___________。7.利用正则表达式的相关知识实现内置的trim()方法。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第18天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第17天]]></title>
    <url>%2Fjsexer17.html</url>
    <content type="text"><![CDATA[在本栏中，我将记录一些JavaScript基础练习题，提升大家对JS的理解。该篇文章是该系列的第十七天。正文1.获取页面中的第一个&lt;button&gt;元素，并添加一个点击事件，在点击事件中判断该元素是否具有类名&quot;color_change&quot;，如果没有，就加上；如果有，就移除掉。试用代码实现之。2.简述元素的offsetWidth()、clientWidth()、scrollWidth()的区别。3.网页上常见的“回到顶部”的JS代码应如何设计？4.试解释JS中的事件流和事件执行的三个阶段。5.写一个方法，找出字符串&quot;abghiabjeabbabeab&quot;中&quot;ab&quot;出现的次数和位置。6.12345678var a = 10; function test() &#123; a = 100; alert(a); alert(this.a); var a; alert(a); &#125; 则运行test()后页面中将按顺序弹出___________，___________，___________。7.for循环和forEach循环有什么区别？说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第17天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>DOM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第17天 答案及解析]]></title>
    <url>%2Fjsexer17-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第十七天的答案及解析部分，纯题目部分请移步js基础练习题 第17天正文1.获取页面中的第一个&lt;button&gt;元素，并添加一个点击事件，在点击事件中判断该元素是否具有类名&quot;color_change&quot;，如果没有，就加上；如果有，就移除掉。试用代码实现之。答案：如下代码段所示：12345678910111213141516// 方法1var button = document.querySelector(&quot;button&quot;);button.onclick = function() &#123; var class_list = button.classList; if(class_list.contains(&quot;color_change&quot;)) &#123; class_list.remove(&quot;color_change&quot;); &#125; else &#123; class_list.add(&quot;color_change&quot;); &#125;&#125;// 方法2var button = document.querySelector(&quot;button&quot;);button.onclick = function() &#123; button.classList.toggle(&quot;color_change&quot;);&#125;2.简述元素的offsetWidth()、clientWidth()、scrollWidth()的区别。答案：区别如下所示offsetWidth表示元素的实际宽度，包括width、padding、垂直滚动条的宽度以及border的宽度。clientWidth指元素的可视区宽度，包括width和padding。scrollWidth指实际内容的宽度，包括width、padding和溢出可视区的宽度，在无溢出的情况，与clientWidth相同。3.网页上常见的“回到顶部”的JS代码应如何设计？如下所示：12345function scrollToTop(element) &#123; if(element.scrollTop != 0) &#123; element.scrollTop = 0 ; &#125;&#125;4.试解释JS中的事件流和事件执行的三个阶段。答案：JS中的事件流包括事件冒泡和事件捕获；事件冒泡是向上生长型，即事件开始时由最具体的元素接收，然后逐级向上传播到较为不具体的节点；事件捕获是向下传播型，即事件开始时由最不具体的元素接收，然后逐渐向下传播到最具体的节点；js事件执行的三个阶段为捕获过程 -&gt; 处于目标阶段 -&gt; 冒泡过程5.写一个方法，找出字符串"abghiabjeabbabeab"中"ab"出现的次数和位置。答案：如下方代码段所示123456789101112function findRepeat(str, s) &#123; let count = 0; let pos = []; let i = 0; while(str.indexOf(s, i) &gt; -1 &amp;&amp; i &lt; str.length) &#123; count++; pos.push(str.indexOf(s, i)); i = str.indexOf(s, i) + s.length; &#125; return &#123; pos, count &#125;;&#125;findRepeat(&quot;abghiabjeabbabeab&quot;, &quot;ab&quot;);6.12345678var a = 10; function test() &#123; a = 100; alert(a); alert(this.a); var a; alert(a); &#125; 则运行test()后页面中将按顺序弹出___________，___________，___________。答案：100、10、1007.for循环和forEach循环有什么区别？for循环可以跳过（continue）或者终止循环（break），而forEach不能这样操作，否则会报错。此外forEach是ECMA5引入的，在低版本浏览器下可能不兼容。说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第17天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>DOM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第16天 答案及解析]]></title>
    <url>%2Fjsexer16-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第十六天的答案及解析部分，纯题目部分请移步js基础练习题 第16天正文1.1let s1 = Symbol();则typeof(s1)的返回值为___________，let s2 = new Symbol();的返回值为___________，答案：&quot;symbol&quot;、报错（TypeError）12let s3 = Symbol("foo");let s4 = Symbol("foo");则s3 === s4的返回值为___________，Object.is(s3, s4)的返回值为___________。答案：false、falseSymbol是一种新的数据类型，且Symbol标示的是独一无二的值，任意两个Symbol都是不相等的，Symbol不是构造器，不能用new的方式创建。2.1var newValue = oldValue;则newValue的值为___________，1var newValue = window.oldValue;则newValue的值为___________。答案：报错（ReferenceError）、undefined第一种写法为访问不存在的变量，故会报错；第二种写法为访问对象中未定义的属性，故会返回undefined。3.简述alert()、confirm()、prompt()三者的作用和区别。如下所示：alert通常是用来表示警告，告知用户一些错误信息或者对用户的重要的警告。confirm是确认对话框，该对话框有两个按钮，即确认和取消，可以由用户来决定，通常用在关闭网页或退出登录或删除文件时。prompt是提示对话框，通常用来提示用户输入一些信息。4.正常情况下，document.firstChild应该是___________。答案：&lt;!doctype html&gt;5.document.documentElement获取到的是__________元素。答案：&lt;html&gt;6.(判断)使用document.body可以获取到body元素。答案：正确7.在JS中，获取页面元素有几种方式，请简要叙述。答案：常用的方法有6种，如下所示：通过id获取元素：document.getElementById(&quot;id&quot;)通过标签名获取元素，结果为一个集合（类似数组）：document.getElementsByTagName(&quot;tag&quot;)通过name属性获取元素，结果为一个集合（类似数组）：document.getElementsByName(&quot;name&quot;)通过class名获取元素，结果为一个集合（类似数组）：document.getElementsByClassName(&quot;className&quot;)访问指定元素，只取第一个值：document.querySelector(&quot;selector&quot;)访问指定元素，结果为一个集合（类似数组）：document.querySelectorAll(&quot;selectors&quot;)8.通过JS创建一个&lt;div&gt;元素，其类名为&quot;myDiv&quot;，其中文本内容为&quot;This is a div element created by JS.&quot;，创建成功后，将其加到&lt;body&gt;元素的末尾，试写出实现代码。答案：代码如下所示：123456789// 方法1: 典型方法，创建元素并插入页面var divElement = document.createElement(&quot;div&quot;);divElement.className = &quot;myDiv&quot;;divElement.innerHTML = &quot;This is a div element created by JS.&quot;;document.body.appendChild(divElement);// 方法2: 简洁方法，但内存开销大var str = &quot;&lt;div class=&#39;myDiv&#39;&gt;This is a div element created by JS.&lt;/div&gt;&quot;;document.body.innerHTML += str;说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第16天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>DOM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第16天]]></title>
    <url>%2Fjsexer16.html</url>
    <content type="text"><![CDATA[在本栏中，我将记录一些JavaScript基础练习题，提升大家对JS的理解。该篇文章是该系列的第十六天。正文1.1let s1 = Symbol();则typeof(s1)的返回值为___________，let s2 = new Symbol();的返回值为___________，12let s3 = Symbol("foo");let s4 = Symbol("foo");则s3 === s4的返回值为___________，Object.is(s3, s4)的返回值为___________。2.1var newValue = oldValue;则newValue的值为___________，1var newValue = window.oldValue;则newValue的值为___________。3.简述alert()、confirm()、prompt()三者的作用和区别。4.正常情况下，document.firstChild应该是___________。5.document.documentElement获取到的是__________元素。6.(判断)使用document.body可以获取到body元素。7.在JS中，获取页面元素有几种方式，请简要叙述。8.通过JS创建一个&lt;div&gt;元素，其类名为&quot;myDiv&quot;，其中文本内容为&quot;This is a div element created by JS.&quot;，创建成功后，将其加到&lt;body&gt;元素的末尾，试写出实现代码。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第16天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>DOM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[BigInt]]></title>
    <url>%2Fbigint.html</url>
    <content type="text"><![CDATA[BigInt是JavaScript中一个新的基本数据类型，使用BigInt可以安全地存储和操作大整数，即使这个数已经超出了Number能够表示的安全整数范围。本文将介绍BigInt的用法以及其与Number的区别。一、前言我们知道，在JavaScript中，Number有一个最大安全整数，即其可以准确表达的最大数字，如下所示1Number.MAX_SAFE_INTEGER; // 9007199254740991 ，超过该数，便不能安全的进行存储和操作。比如说：2 ** 53 + 1 == 2 ** 53会返回true，这显然是不正确的。于是乎，BigInt就从天而降，BigInt可以用任意精度表示整数，可以正确执行整数运算而不会溢出。二、语法1.创建BigInt创建BigInt有两种方式，第一种方式是BigInt(value)函数，其中value为整数或字符串；第二种方式是在一个整数字面量后面加n。如：12const a = BigInt(9007199254740991); // 9007199254740991nconst b = 9007199254740991n； // 9007199254740991n注意， BigInt()不是构造函数，因此不能使用new操作符。如果向BigInt函数中错误的传递值，会导致报错。如：12345const c = BigInt("hhh"); // SyntaxErrorconst d = BigInt(25.23); // RangeErrorconst e = BigInt("12ab"); // SyntaxErrorconst f = 1.5n; // SyntaxErrorconst g = BigInt(); // TypeError2.类型检测对BigInt类型的变量执行typeof操作，会返回bigint。12const h = BigInt(9007199254740993); typeof h; // "bigint"3.运算BigInt支持常见的运算符。二元运算 +, -, *, 和 ** 都可以正常使用。 / 和 % 可以使用，并根据需要向零取整。12345const i = BigInt(9007199254740991); i + 1n; // 9007199254740992ni - 2n; // 9007199254740989ni * 2n; // 18014398509481982n5n / 2n; // 2n需要注意的是BigInt类型不能与其他类型的值混合运算、不能和Math对象中的方法一起使用否则会报错，如：125n + 2; // TypeErrorMath.pow(2n, 3n); // TypeError4.比较与转换BigInt和Number不是严格相等的，但是是宽松相等的。并且BigInt与其他类型的变量做比较和转换时，其转换规则与Number一致。1230n == 0; // true0n === 0; // false1n &lt; 2; // true注意， BigInt变量在转换成Number变量时可能会丢失精度。如：1Number(1234567890123456789n * 123n); // 151851850485185200000结果就很明显不正确。三、API1.BigInt()函数BigInt()函数将其参数转换为BigInt。如果转换失败，它抛出一个SyntaxError或RangeError异常。123BigInt(123); // 123nBigInt(1.5); // RangeErrorBigInt('1.5'); // SyntaxError2.两个库函数BigInt.asIntN(width,value)将一个BigInt值包装为一个width位的二进制有符号整数。BigInt.asUintN(width,value) 将一个BigInt值包装为一个width位的二进制无符号整数。例如，如果您正在执行64位算术，123const j = 2n ** 63n - 1n;BigInt.asIntN(64, j); // 9223372036854775807nBigInt.asIntN(64, j + 1n); // -9223372036854775808n则只要我们给传递BigInt超过64位整数范围的值，就会发生溢出。3.两种新的类型数组BigInt64Array和BigUint64Array让我们更容易且高效地表示和操作64位有符号和无符号整数组成的列表。123456const k = new BigInt64Array(4); // [0n, 0n, 0n, 0n]const l = 2n ** 63n - 1n;const m = new BigInt64Array(2); m[0] = l; m[1] = l + 1n; m; // [9223372036854775807n, -9223372036854775808n]12345const n = 2n ** 63n - 1n;const o = new BigUint64Array(2); o[0] = n; o[1] = n + 1n; o; // [9223372036854775807n, 9223372036854775808n]BigInt64Array确保这些值是有符号的。BigUint64Array 确保这些值是无符号的。四、参考链接BigInt：JavaScript 中的任意精度整数MDN]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>数据类型</tag>
        <tag>bigint</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第15天 答案及解析]]></title>
    <url>%2Fjsexer15-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第十五天的答案及解析部分，纯题目部分请移步js基础练习题 第15天正文1.(function foo(a, b, c = 5){}).length = ____________，(function foo(x, ...y){}).length = ___________，(function foo([a, b, c]){}).length = ___________，(function foo(x, ...y, z){}).length = ___________。答案：2、1、1、报错（SyntaxError）函数长度指的是函数形参中显式参数的个数，即除去默认参数、剩余参数之外的个数，且剩余参数（Rest parameter）必须位于末尾。2.1234var x = 1;function f(x, y = x) &#123; console.log(y);&#125;运行f(2)控制台将输出___________，运行f()控制台将输出___________。答案：2、undefined3.12345let x = 1;function f(y = x)&#123; let x = 2; console.log(y);&#125;运行f(2)控制台将输出___________，调用f()控制台将输出___________。假设没有第一行的变量声明，则运行f()控制台将输出___________。答案：2、1、报错（ReferenceError）4.试设计一个程序，能执行任意个数的加减法，如 1 + 2， 3 + 5 + 0.2， 0.5 - 3.5 + 3 - 8 等。答案：如下代码块所示1234567891011// 方法一：利用扩展运算符const sum = (…values) =&gt; &#123; return […values].reduce((prev, next) =&gt; prev + next); &#125;// 方法二：利用argumentsfunction sum() &#123; return [].slice.apply(arguments).reduce(function(prev, next) &#123; return prev + next; &#125;);&#125;5.阅读以下代码：1234567var id = 123;var handler = &#123; id: 456, dosomething: function() &#123; console.log(this.id); &#125;&#125;运行handler.dosomething()控制台将输出___________。若把 dosomething改为dosomething: () =&gt; {console.log(this.id);}则运行handler.dosomething()控制台将输出___________。答案：456、1236.{} == {}的返回值为___________，Object.is({}, {})的返回值为___________，Object.is(NaN, NaN)的返回值为___________，+0 === -0的返回值为___________，Object.is(+0, -0)的返回值为___________。答案：false、false、true、true、false7.js一共有几种方法可以遍历对象的属性，试列举并指出区别。答案：js一共有5种遍历对象属性的方法。for...in：遍历自身和继承的可枚举属性（不含symbol属性）Object.keys(obj)：返回对象自身的所有可枚举属性（不含symbol属性）Object.getOwnPropertyNames(obj)：返回对象自身的所有属性（不含symbol属性）Object.getOwnPropertySymbols(obj)：返回对象自身的所有symbol属性Reflect.ownKeys(obj)：返回对象自身的所有属性说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第15天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Object</tag>
        <tag>Function</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第15天]]></title>
    <url>%2Fjsexer15.html</url>
    <content type="text"><![CDATA[在本栏中，我将记录一些JavaScript基础练习题，提升大家对JS的理解。该篇文章是该系列的第十五天。正文1.(function foo(a, b, c = 5){}).length = ____________，(function foo(x, ...y){}).length = ___________，(function foo([a, b, c]){}).length = ___________，(function foo(x, ...y, z){}).length = ___________。2.1234var x = 1;function f(x, y = x) &#123; console.log(y);&#125;运行f(2)控制台将输出___________，运行f()控制台将输出___________。3.12345let x = 1;function f(y = x)&#123; let x = 2; console.log(y);&#125;运行f(2)控制台将输出___________，调用f()控制台将输出___________。假设没有第一行的变量声明，则运行f()控制台将输出___________。4.试设计一个程序，能执行任意个数的加减法，如1 + 2，3 + 5 + 0.2，0.5 - 3.5 + 3 - 8等。5.阅读以下代码：1234567var id = 123;var handler = &#123; id: 456, dosomething: function() &#123; console.log(this.id); &#125;&#125;运行handler.dosomething()控制台将输出___________。若把 dosomething改为dosomething: () =&gt; {console.log(this.id);}则运行handler.dosomething()控制台将输出___________。6.{} == {}的返回值为___________，Object.is({}, {})的返回值为__________，Object.is(NaN, NaN)的返回值为__________，+0 === -0的返回值为__________，Object.is(+0, -0)的返回值为__________。7.js一共有几种方法可以遍历对象的属性，试列举并指出区别。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第15天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Object</tag>
        <tag>Function</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第14天 答案及解析]]></title>
    <url>%2Fjsexer14-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第十四天的答案及解析部分，纯题目部分请移步js基础练习题 第14天正文1.&quot;na&quot;.repeat(1) = ____________，&quot;na&quot;.repeat(2.9) = ___________，&quot;na&quot;.repeat(0.3) = ___________，&quot;na&quot;.repeat(-2) = ___________。答案：&quot;na&quot;、&quot;nana&quot;、&quot;&quot;、报错（RangeError）repeat函数的参数必须为（可转换为）非负数。2.将"User " + user.name + " is not authoried to do " + action + "."改写为模板字符串表示法为______________________。答案：`User ${user.name} is not authoried to do ${action}.`3.Number.isInteger(&quot;15&quot;) = ____________，Number.isInteger(25.0) = ___________。答案：false、trueNumber.isInteger()函数不会进行类型转换。4.试编写一个取整函数，要求只取出整数部分，如 -4.2 取为-4，3.4取为3。答案：如下代码块所示123const trunc = (x) =&gt; &#123; return x &lt; 0 ? Math.ceil(x) : Math.floor(x);&#125;;5.已知arrayLike = { 0: &quot;a&quot;, 1: &quot;b&quot;, 2: &quot;c&quot;, length: 4 }，要将arrayLike转换为数组，有几种方法?写出你知道的所有方法。答案：如下代码块所示1234// 方法1：slice[].slice.call(arrayLike);// 方法2： Array.from()Array.from(arrayLike);6.Array.from([1, ,2, ,3], (n) =&gt; n || 0)的返回值为___________，Array.of(2)的返回值为___________。答案：[1, 0, 2, 0, 3]、[2]7.阅读以下代码：12345function log(x, y) &#123; x = x || "Hello"; y = y || "World"; console.log(x, y);&#125;运行log()控制台将输出___________，调用log("Hi")控制台将输出___________，调用log("Hi","")控制台将输出___________，调用log(,"China")控制台将输出___________。答案：Hello World、Hi World、Hi World、报错（SyntaxError）说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第14天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第14天]]></title>
    <url>%2Fjsexer14.html</url>
    <content type="text"><![CDATA[在本栏中，我将记录一些JavaScript基础练习题，提升大家对JS的理解。该篇文章是该系列的第十四天。正文1.&quot;na&quot;.repeat(1) = ____________，&quot;na&quot;.repeat(2.9) = ___________，&quot;na&quot;.repeat(0.3) = ___________，&quot;na&quot;.repeat(-2) = ___________。2.将&quot;User &quot; + user.name + &quot; is not authoried to do &quot; + action + &quot; . &quot;改写为模板字符串表示法为______________________。3.Number.isInteger(&quot;15&quot;) = ____________，Number.isInteger(25.0) = ___________。4.试编写一个取整函数，要求只取出整数部分，如 -4.2 取为-4，3.4取为3。5.已知arrayLike = { 0: &quot;a&quot;, 1: &quot;b&quot;, 2: &quot;c&quot;, length: 4 }，要将arrayLike转换为数组，有几种方法?写出你知道的所有方法。6.Array.from([1, ,2, ,3], (n) =&gt; n || 0)的返回值为___________，Array.of(2)的返回值为___________。7.阅读以下代码：12345function log(x, y) &#123; x = x || "Hello"; y = y || "World"; console.log(x, y);&#125;运行log()控制台将输出___________，调用log(&quot;Hi&quot;)控制台将输出___________，调用log(&quot;Hi&quot;,&quot;&quot;)控制台将输出___________，调用log(,&quot;China&quot;)控制台将输出___________。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第14天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第13天 答案及解析]]></title>
    <url>%2Fjsexer13-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第十三天的答案及解析部分，纯题目部分请移步js基础练习题 第13天正文1.js有几种基本数据类型？答案：在js中一共有7种基本数据类型，分别是number, string, boolean, null, undefined, symbol, bigint关于symbol的介绍，可以参照MDN symbol，关于bigint的介绍，可以参看MDN bigint2.js有几种引用数据类型？答案：在js中一共有3种引用数据类型，分别是object、array、function3.简述基本数据类型与引用数据类型的区别。从数据存储上来说，基本数据类型的名（key）和值（value）都存储在栈内存中；而引用数据类型的名存在栈内存中，值存在于堆内存中，栈内存会提供一个引用的地址（指针）指向堆内存中的值。4.深拷贝与浅拷贝有何区别？如何利用js实现一个简单的深拷贝，试给出你的代码。浅拷贝是对栈内存中的值（即指针）的拷贝，拷贝前后对象指向的是堆内存中的同一个值；深拷贝是指在堆内存中开辟一个新的内存专门来存放拷贝值，此时拷贝后的值与原值就是相互独立、互不影响的。1234567891011121314151617181920// 可以使用递归去复制所有层级属性function deepClone(obj) &#123; let objClone = Array.isArray(obj) ? [] : &#123;&#125;; if(obj &amp;&amp; typeof obj === “object”) &#123; for(var key in obj) &#123; if(obj.hasOwnProperty(key)) &#123; //判断ojb子元素是否为对象，如果是，递归复制 if(obj[key] &amp;&amp; typeof obj[key] === “object”) &#123; objClone[key] = deepClone(obj[key]); &#125; else &#123; //如果不是，简单复制 objClone[key] = obj[key]; &#125; &#125; &#125; &#125; else &#123; return obj; &#125; return objClone;&#125; 使用复制代码时，请将代码中的中文双引号替换为英文引号。5.12345678910111213141516var a = 10;var b = 20;var obj = &#123; a: 30, b: this.a + 40, foo: function () &#123; return this.a; &#125;, bar: () =&gt; this.a , baz: function() &#123; function abc() &#123; return this.b; &#125; abc(); &#125;,&#125;以上代码运行后，则obj.b = __________，obj.foo()的返回值为 __________，答案：50、30执行了1var test = obj.foo;后，test()的返回值为__________，obj.bar()的返回值为__________，obj.baz()的返回值为__________。答案：10、10、undefined关于js中this的讲解，可以参照这波能反杀的个人博客。6.实现一个add方法，使计算结果能够满足如下预期：add(1, 2, 3) = 6add(1, 2, 3)(4) = 10add(1)(2)(3)(4)(5) = 15答案：如下方代码段所示12345678910const add = (…args) =&gt; &#123; const _add = function() &#123; args.push(…arguments); return _add; &#125; _add.toString = () =&gt; &#123; return args.reduce( (a, b) =&gt; a + b ); &#125; return _add;&#125;7.说说你了解的Promise。Promise是一种异步机制，主要是用来解决回调地狱的问题。Promise对象有三种状态，分别是pending、resolved、rejected；在Promise对象的构造函数中，接收resolve和reject函数修改状态；Promise对象中的then方法，可以接收构造函数中处理的状态变化，并分别对应执行。then方法的执行结果也会返回一个Promise对象，因此可以进行then的链式执行，这也是解决回调地狱的主要方式。说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第13天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>数据类型</tag>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>柯里化</tag>
        <tag>Promise</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第13天]]></title>
    <url>%2Fjsexer13.html</url>
    <content type="text"><![CDATA[在本栏中，我将记录一些JavaScript基础练习题，提升大家对JS的理解。该篇文章是该系列的第十三天。正文1.js有几种基本数据类型？2.js有几种引用数据类型？3.简述基本数据类型与引用数据类型的区别。4.深拷贝与浅拷贝有何区别？如何利用js实现一个简单的深拷贝，试给出你的代码。5.12345678910111213141516var a = 10;var b = 20;var obj = &#123; a: 30, b: this.a + 40, foo: function () &#123; return this.a; &#125;, bar: () =&gt; this.a , baz: function() &#123; function abc() &#123; return this.b; &#125; abc(); &#125;,&#125;以上代码运行后，则obj.b = __________，obj.foo()的返回值为 __________，执行了1var test = obj.foo;后，test()的返回值为__________，obj.bar()的返回值为__________，obj.baz()的返回值为__________。6.实现一个add方法，使计算结果能够满足如下预期：add(1, 2, 3) = 6add(1, 2, 3)(4) = 10add(1)(2)(3)(4)(5) = 157.说说你了解的Promise。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第13天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>数据类型</tag>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>柯里化</tag>
        <tag>Promise</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第12天 答案及解析]]></title>
    <url>%2Fjsexer12-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第十二天的答案及解析部分，纯题目部分请移步js基础练习题 第12天正文1.有三个数字：1、2、3，能组成多少个互不相同且无重复数字的三位数?各是多少?试用JS实现之。答案：如下代码块所示12345678910111213let arr1 = [1, 2, 3];let arr2 = [];for (let i of arr1) &#123; for (let j of arr1) &#123; for (let k of arr1) &#123; if (new Set([i, j, k]).size == 3) &#123; arr2.push(i * 100 + j * 10 + k); &#125; &#125; &#125;&#125;console.log(arr2.length);console.log(arr2);我总觉得有比三层暴力循环好的算法，如果您能提供的话，欢迎留言哦！2.一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数有几种取值?分别是多少?通过JS实现之。答案：如下代码块所示12345678let arr = [];for (let n = 0; n &lt;= 13; n++) &#123; let y = 84 / n - n / 2; if(Number.isInteger(y)) &#123; arr.push( y * y - 100); &#125;&#125;console.log(arr);设该数为x。则x + 100 = y * y，y * y + 168 = z * z。假设z = y + n，则 y * y + 168 = (y + n)(y + n)，化解可得y = 84 / n - n / 2。则 x = y * y - 100。当y为整数时，条件成立。3.利用JS随机生成1-100的10个整数，并把这10个数由小到大输出。答案：如下代码块所示12345let arr = [];for (var i = 0; i &lt; 10; i++) &#123; arr.push(Math.floor(Math.random() * 100) + 1);&#125;console.log(arr.sort((a, b) =&gt; a - b));注意Math.random()生成的[0, 1)形式的随机数，即包含0，不包含1。4.将一个数组的2到5号（不包括5号）位置的数据复制到另一个数组的1号位置中（索引值从0开始）。利用JS实现之。答案：如下代码块所示1234let arr1 = [1, 2, 3, 4, 5, 6];let arr2= [7, 8, 9];arr2.splice(1, 0, arr1.slice(2, 5));console.log(arr2);说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第12天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>js练习题答案</tag>
        <tag>Array</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第12天]]></title>
    <url>%2Fjsexer12.html</url>
    <content type="text"><![CDATA[在本栏中，我将记录一些JavaScript基础练习题，提升大家对JS的理解。该篇文章是该系列的第十二天。正文1.有三个数字：1、2、3，能组成多少个互不相同且无重复数字的三位数?各是多少?试用JS实现之。2.一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数有几种取值?分别是多少?通过JS实现之。3.利用JS随机生成1-100的10个整数，并把这10个数由小到大输出。4.将一个数组的2到5号（不包括5号）位置的数据复制到另一个数组的1号位置中（索引值从0开始）。利用JS实现之。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第12天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS两栏布局的几种实现方式]]></title>
    <url>%2Ftwo-cols-display.html</url>
    <content type="text"><![CDATA[前两天我分享了如何实现三栏布局，本次将分享如何实现另一个经典的布局方式，两栏布局。两栏布局也是前端面试常问的问题，其实现方式相比三栏布局其实更为简单。所谓的两栏布局，一般指的是“一侧定宽，一侧自适应”，在这篇文章中，我将分享实现两栏布局的4种方式。一、前言CSS两栏布局指的是在一个容器（container）中，其中一侧定宽布局，而另一侧自适应，自动填满剩余的空间。下面我们以“左侧定宽为200px，右侧自适应，且两侧的高度都为100px”为例，采用几种不同的方式来实现此布局。在这里我们假设已经对所有元素设置了：12margin: 0;padding: 0;二、布局方式1.position布局HTML代码如下：12345&lt;!--我们假设容器元素为body元素，实际情况，可自定义一个container --&gt;&lt;body&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt;&lt;/body&gt;CSS代码如下：12345678910111213141516/* 左侧布局 */.left&#123; width: 200px; height: 100px; background-color: blue; &#125;/* 右侧布局，注意left属性的值 */.right&#123; height: 100px; position: absolute; top: 0; left: 200px; right: 0; bottom: 0; background-color: red;&#125;该布局方式其实不太灵活，需要手动计算和修改定位边的距离。如果定宽部分设置了margin、padding、border，则另一侧也需要做相应更改，维护起来比较麻烦。2.float布局HTML部分不变。CSS部分：123456789101112/* 左侧部分 */.left&#123; width: 200px; height: 100px; float: left; background-color: blue;&#125;/* 右侧部分 */.right&#123; height: 100px; background-color: red;&#125;该布局方式更简洁，将左侧设置为浮动布局，右侧元素自然就跟随着浮动了，根据需要，可以在右侧元素后清除浮动（实际上，在此种方式下，不用设置清除浮动，该布局为流式布局）。12345/* 清除浮动 */right::after&#123; content: ""; clear: both;&#125;3.flex布局HTML部分：1234&lt;div class="container"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt;&lt;/div&gt;CSS代码如下：12345678910111213.container&#123; width: 100%; height: 100px; display: flex; /*设置布局方式为flex布局，一定要在父元素上设置*/&#125;.left&#123; flex-basis: 200px;/*定宽*/ background-color: blue;&#125;.right&#123; flex: auto; /*自动填满*/ background-color: red;&#125;实际上，flex布局应该是最灵活、最方便的响应式布局方式了，不过其也有一个缺点，那就是必须要IE9以上的浏览器才支持该布局方式。如果不需要兼容IE9及以下浏览器，尽情的使用flex布局吧。4.grid布局HTML代码部分与flex布局一致CSS部分：123456789101112.container&#123; width: 100%; height: 100px; display: grid; /*设置为grid布局*/ grid-template-columns: 200px auto; /*设置每一列的宽度*/&#125;.left&#123; background-color: blue;&#125;.right&#123; background-color: red;&#125;gird布局是继flex布局后的又一种布局方式，不过其兼容性相对来说要差一些。5.table布局HTML与flex布局一致CSS部分：12345678910111213141516.container &#123; width: 100%; height: 100px; display: table;/* 设置为 table 布局 */&#125;/* 将其子项设置为 table-cell 布局 */.left, .right &#123; display: table-cell;&#125;.left &#123; width: 200px; background-color: red;&#125;.right &#123; background-color: blue;&#125;table布局很形象，就把其理解为一个表格。不过在实际运用中其实用得比较少。三、总结通过上文的分析，咱们可以有四种布局方式，以实现左侧定宽、右侧自适应的布局。position布局：兼容性好，不过维护困难float布局：兼容性好，遵循流式布局原理flex布局：必须要IE9以上浏览器才支持，不过使用灵活、方便grid布局：兼容性相对较差table布局：了解即可四、下载代码我将每种布局方式写入了单独的HTML文件，可点击此处下载示例代码压缩包。代码下载后，尽量在新版谷歌浏览器中查看效果。您还有哪些好的布局方式呢？可以在下方留言分享哦！]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>布局</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript中var、let和const的区别]]></title>
    <url>%2Fvar-let-const.html</url>
    <content type="text"><![CDATA[在前端面试中，特别是前端实习生的面试问题中，对于ES6的考查上，var、let、const这三种变量声明方式的异同点几乎是必考的，本文就来分析一下三者之间有什么区别。一、前言在ES6（ES2015）出现之前，JavaScript中声明变量只有通过var关键字，函数声明是通过 function关键字，而ES6出现后，声明的方式有var 、let 、const 、function 、 class，本文主要讨论 var 、let 和 const 之间的区别。二、var如果使用关键字var声明一个变量，那么这个变量就属于当前的函数作用域，如果声明是发生在任何函数外的顶层声明，那么这个变量就属于全局作用域。举例说明：1234567var a = 1; //此处声明的变量a为全局变量function foo() &#123; var a = 2; //此处声明的变量a为函数foo的局部变量 console.log(a); //2&#125;foo();console.log(a); //1如果在声明变量时，省略var的话，该变量就会变成全局变量，如全局作用域中存在该变量，就会更新其值。如：1234567var a = 1; //此处声明的变量a为全局变量function foo()&#123; a = 2; //此处的变量a也是全局变量 console.log(a); //2&#125;foo();console.log(a); //2注意：var声明的变量存在提升（hoisting）。三、提升提升是指无论var出现在一个作用域的哪个位置，这个声明都属于当前的整个作用域，在其中到处都可以访问到。注意只有变量声明才会提升，对变量赋值并不会提升。如下例所示：12console.log(a); //undefinedvar a = 1;该代码段跟下列代码段是一样的逻辑：123var a;console.log(a); //undefineda = 1;而如果对未声明过的变量进行操作，就会报错1console.log(b); //假设b未声明过，Uncaught ReferenceError: b is not defined四、letlet声明的变量，具有如下几个特点：let声明的变量具有块作用域的特征。在同一个块级作用域，不能重复声明变量。let声明的变量不存在变量提升，换一种说法，就是let声明存在暂时性死区（TDZ）。如下面几个例子所示1234let a = 1;console.log(a); //1console.log(b); //Uncaught ReferenceError: b is not definedlet b = 2;1234function foo() &#123; let a = 1; let a = 2; //Uncaught SyntaxError: Identifier 'a' has already been declared&#125;以下是一个经典的关于var和let的一个例子：12345for (var i = 0; i &lt; 10; i++) &#123; setTimeout(function()&#123; console.log(i); &#125;, 100)&#125;;该代码运行后，会在控制台打印出10个10.若修改为：12345for (let i = 0; i &lt; 10; i++) &#123; setTimeout(function()&#123; console.log(i); &#125;, 100)&#125;;则该代码运行后，就会在控制台打印出 0 1 2 … 7 8 9。五、constconst声明方式，除了具有let的上述特点外，其还具备一个特点，即const定义的变量，一旦定义后，就不能修改，即const声明的为常量。例如：1234const a = 1;console.log(a); //1a = 2;console.log(a); //Uncaught TypeError: Assignment to constant variable.但是，并不是说const声明的变量其内部内容不可变，如：1234const obj = &#123; a: 1, b: 2 &#125;;console.log(obj.a); //1obj.a = 3;console.log(obj.a); //3所以准确的说，是const声明创建一个值的只读引用。但这并不意味着它所持有的值是不可变的，只是变量标识符不能重新分配。六、总结var声明的变量属于函数作用域，let和const声明的变量属于块级作用域；var存在变量提升现象，而let和const没有此类现象；var变量可以重复声明，而在同一个块级作用域，let变量不能重新声明，const变量不能修改。]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>let</tag>
        <tag>ES6</tag>
        <tag>const</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第11天 答案及解析]]></title>
    <url>%2Fjsexer11-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第十一天的答案及解析部分，纯题目部分请移步js基础练习题 第11天正文1.1234567var tmp = 123;function foo() &#123; console.log(tmp); if(false) &#123; var tmp = 456; &#125;&#125;运行foo()会在控制台输出__________，运行foo()的返回值是__________。答案：undefined、undefined在if语句中的var声明会提升到函数内部开始位置，即等价于：1234567function foo() &#123; var tmp; console.log(tmp); if(false) &#123; tmp = 456; &#125;&#125;2.1const PI;console.log(PI);的返回值是__________。答案：报错（SyntaxError）const声明必须进行初始化，即声明时必须显式赋值。3.12const foo = &#123;&#125;;foo.name = "Jealyn";执行完上面那段代码后，foo.name = __________ 。答案：Jealynconst声明创建一个值的只读引用。但这并不意味着它所持有的值是不可变的，只是变量标识符不能重新分配4.12var a = 1;let b = 2;则window.a = __________ ， window.b = __________。答案：1、undefinedvar声明的全局变量会自动变为window对象的属性，而let声明的变量不会。5.JS中一共有几种声明变量的方法?请简要叙述它们的区别。答案：普通声明方式：var 和 function，它们的典型特征是存在变量提升块级作用域：let 和const，它们声明的变量都是具有块级作用域的，在一个块内不能重复声明，其中const声明时必须进行初始化操作模块变量：import，用于导入相应模块且可以修改变量名定义类：class，用于创建类6.1let [head, ...tail] = [1, 2, 3, 4];则 head = __________，tail = __________。答案：1、[2, 3, 4]1let[x, y, ...z] = ["a"];则 x = _________，y = _________，z = __________。答案：”a”、undefined、[]1var [x = 1, y = undefined] = [null, 2];则 x = __________，y = __________。答案：null、2关于解构赋值，请参看MDN 解构赋值说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第11天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>js练习题答案</tag>
        <tag>let</tag>
        <tag>ES6</tag>
        <tag>const</tag>
        <tag>解构赋值</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第11天]]></title>
    <url>%2Fjsexer11.html</url>
    <content type="text"><![CDATA[在本栏中，我将记录一些JavaScript基础练习题，提升大家对JS的理解。该篇文章是该系列的第十一天。正文1.1234567var tmp = 123;function foo() &#123; console.log(tmp); if(false) &#123; var tmp = 456; &#125;&#125;运行foo()会在控制台输出__________，运行foo()的返回值是__________。2.1const PI;console.log(PI);的返回值是__________。3.12const foo = &#123;&#125;;foo.name = "Jealyn";执行完上面那段代码后，foo.name = __________ 。4.12var a = 1;let b = 2;则window.a= __________ ， window.b = __________。5.JS中一共有几种声明变量的方法?请简要叙述它们的区别。6.1let [head, ...tail] = [1, 2, 3, 4];则 head = __________，tail = __________。1let[x, y, ...z] = ["a"];则 x = __________，y = __________，z = __________。1var [x = 1, y = undefined] = [null, 2];则 x = __________，y = __________。7.不建立临时变量，如何实现两个值的互换，试给出你的代码。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第11天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>let</tag>
        <tag>ES6</tag>
        <tag>const</tag>
        <tag>解构赋值</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS三栏布局的几种实现方式]]></title>
    <url>%2Fthree-cols-display.html</url>
    <content type="text"><![CDATA[如何实现三栏布局，也是前端面试常问的问题了。所谓的三栏布局，一般指的是“左右侧定宽，中间部分自适应”，在这篇文章中，我将分享实现三栏布局的5种方式。关于两栏布局的实现方式，可访问：两栏布局的实现。一、前言假设我们要实现一个页面布局需求，其要求“从左至右，页面可分为3部分，这3部分的高度都为300px。其中左右侧宽度固定，为200px宽，中间部分自动充满剩余空间”，你该如何实现呢？在这里我们假设已经对所有元素设置了：12margin: 0;padding: 0;二、布局方式1.position布局HTML代码如下：123456&lt;!--我们假设容器元素为body元素，实际情况，可自定义一个container --&gt;&lt;body&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="center"&gt;&lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt;&lt;/body&gt;CSS代码如下：1234567891011121314151617181920212223242526272829.left, .right &#123; width: 200px; height: 300px; position: absolute; top: 0;&#125; /* 左侧定位 */.left &#123; left: 0; background-color: red;&#125; /* 中间自适应区 */.center &#123; height: 300px; position: absolute; top: 0; left: 200px; right: 200px; bottom: 0; background-color: blue;&#125; /* 右侧定位 */.right &#123; right: 0; background-color: red;&#125;代码逻辑方面还是比较清晰的，通过定位，将几个块放在一堆。不过其冗余度太高，而且维护成本和维护难度也相当之大。违背了DRY原则（Don’t Repeat Yourself）。2.float + calc 布局HTML部分不变。CSS部分：1234567891011121314151617181920212223/* 三者共有样式 */.left, .center, .right &#123; height: 300px; float: left;&#125; /* 左侧样式 */.left &#123; width: 200px; background-color: red;&#125; /* 中间样式，关键在 calc */.center &#123; width: calc(100% - 400px); background-color: blue;&#125; /* 右侧样式 */.right &#123; width: 200px; background-color: red;&#125; 该方式的逻辑还是挺简单的，三个块依次浮动，从而形成一行。关键部分在于 calc属性，其可以动态计算值，在该例中，其用来计算center部分的宽度，其为 父元素的宽度（100%）减去左右侧实际宽度之和（200 + 200 ），利用该属性，实现了自适应宽度布局。关于该属性的具体介绍，参看 CSS3的calc()使用。3.flex布局HTML部分：123456&lt;!--我们假设容器元素为body元素，实际情况，可自定义一个container --&gt;&lt;div class="container"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="center"&gt;&lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt;&lt;/div&gt;CSS部分：123456789101112131415161718/* 外层容器设置为 flex 布局 */.container &#123; width: 100%; height: 300px; display: flex;&#125; /* 左右侧定宽处理 */ .left, .right &#123; flex-basis: 200px; background-color: red;&#125; /* 中间部分自适应布局 */.center &#123; flex: auto; background-color: blue;&#125; flex布局一如既往的灵活与简单。还是那句话，如果不用苦逼的兼容IE9及以下浏览器，愉快的使用flex布局吧。4.grid布局HTML代码部分与flex布局一致CSS部分：123456789101112.container &#123; width: 100%; height: 300px; display: grid; /* 设置为 grid 布局 */ grid-template-columns: 200px auto 200px;/* 定义每列的宽度，左右200px，中间自适应 */&#125;.left, .right &#123; background-color: red;&#125;.center &#123; background-color: blue;&#125;grid布局设置起来更方便，不过其兼容性较差，所以可以作为实验性功能使用。要查看效果，建议使用最新版的谷歌浏览器。另外，可以使用自动加前缀插件来优化代码，自动加前缀插件为Autoprefixer，这里推荐其在线工具：Autoprefixer在线工具 。5.table布局HTML与flex布局一致CSS部分：1234567891011121314151617.container &#123; width: 100%; height: 300px; display: table;/* 设置为 table 布局 */&#125; /* 将其子项设置为 table-cell 布局 */.left, .center, .right &#123; display: table-cell;&#125;.left, .right &#123; width: 200px; background-color: red;&#125;.center &#123; background-color: blue;&#125;table布局很形象，就把其理解为一个表格。不过在实际运用中其实用得比较少。三、总结通过上文的分析，咱们可以有5种方式，以实现三栏布局。position布局：兼容性好，不过维护和修改困难float + calc 布局：必须要IE9以上浏览器才支持，遵循流式布局原理flex布局：必须要IE9以上浏览器才支持，不过使用灵活、方便，推荐使用grid布局：兼容性相对较差，可作为实验性功能table布局：了解即可四、下载代码我将每种布局方式写入了单独的HTML文件，可点击此处下载示例代码压缩包。代码下载后，尽量在新版谷歌浏览器中查看效果。您还有哪些好的布局方式呢？可以在下方留言分享哦！]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>布局</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第10天 答案及解析]]></title>
    <url>%2Fjsexer10-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第十天的答案及解析部分，纯题目部分请移步js基础练习题 第10天正文1.分析以下代码:123456789var name = "Window";var object = &#123; name: "Object", getName: function() &#123; return function() &#123; return this.name; &#125; &#125;&#125;该代码段运行后，object.getName = __________,object.getName() = __________,object.getName()() = __________,getName()() = __________,答案：f(){return function(){return this.name;}}、f(){return this.name;}、Window、报错（ReferenceError）若把getName函数修改成123456getName: function() &#123; var that = this; return function() &#123; return that.name; &#125;&#125;则object.getName()() = __________。答案：Object该题目想考察的就是JS中this绑定与失绑的问题，具体可查看这篇文章。2.请简述IIFE的作用和声明方法。IIFE是Immediately Invoked Function Expression的简称，意为立即执行的函数表达式，即立即执行函数，IIFE通常用来模拟私有作用域，将只使用一次的函数通过IIFE的形式调用，来大大节省资源占用；其声明方式为:123(function functionName(i) &#123; //your code&#125;)(i);3.运行下列代码，将在控制台输出__________：12console.log(a);let a = 1;答案：报错（ReferenceError）let方式声明的变量不存在变量提升。4.123function foo(x = y, y = 2) &#123; return x + y;&#125;foo()的返回值为__________。答案：报错（ReferenceError）在函数参数解析中，是按照从左向右的顺序进行解析的，当将y赋给x时，因此时y并为声明，故报错。5.123function bar(x = "2", y = +x) &#123; return x + y;&#125;bar()的返回值为__________。答案：&quot;22&quot;函数执行后，x = &quot;2&quot;, y = 2, 此时的+为拼接操作符。6.分析下列代码的运行结果:1234function bar(x, y) &#123; let x = x.toUpperCase(); return x;&#125;运行bar("hello", "world");的返回值是__________。报错（SyntaxError）由于在函数参数中已经声明了x，在函数内再进行let声明已然重复，故会报错Identifier &#39;x&#39; has already been declared，提示x已声明。说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第10天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>js练习题答案</tag>
        <tag>let</tag>
        <tag>ES6</tag>
        <tag>IIFE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第10天]]></title>
    <url>%2Fjsexer10.html</url>
    <content type="text"><![CDATA[在本栏中，我将记录一些JavaScript基础练习题，提升大家对JS的理解。该篇文章是该系列的第十天。正文1.分析以下代码:123456789var name = "Window";var object = &#123; name: "Object", getName: function() &#123; return function() &#123; return this.name; &#125; &#125;&#125;该代码段运行后，object.getName = __________,object.getName() = __________,object.getName()() = __________,getName()() = __________,若把getName函数修改成123456getName: function() &#123; var that = this; return function() &#123; return that.name; &#125;&#125;则object.getName()() = __________。2.请简述IIFE的作用和声明方法。3.运行下列代码，将在控制台输出__________：12console.log(a);let a = 1;4.123function foo(x = y, y = 2) &#123; return x + y;&#125;foo()的返回值为__________。5.123function bar(x = "2", y = +x) &#123; return x + y;&#125;bar()的返回值为__________。6.分析下列代码的运行结果:1234function bar(x, y) &#123; let x = x.toUpperCase(); return x;&#125;运行bar(&quot;hello&quot;, &quot;world&quot;);的返回值是__________。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第10天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>let</tag>
        <tag>ES6</tag>
        <tag>IIFE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第9天 答案及解析]]></title>
    <url>%2Fjsexer9-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第九天的答案及解析部分，纯题目部分请移步js基础练习题 第9天正文1.分析以下代码:1var arr = new Array("3");运行后arr.length = __________, arr[1] = __________。答案：1、undefined12arr[arr.length] = 4; arr[arr.length] = 5;现在，arr = __________。答案：[&quot;3&quot;, 4, 5]当向Array函数中传入数字参数时，会被解析为数组的初始长度值；传入其他参数时，解析为数组项的值。2.分析以下代码。12var arr = [0, 15, 10, 1, 5];arr.sort();代码运行后，arr = __________。答案：[0, 1, 10, 15, 5]sort函数默认采用的是字符的Unicode编码方式进行升序排序。3.要实现数组中的值按数值大小降序排序，应如何编写代码?以第2题中的arr为例。答案：12var arr = [0, 15, 10, 1, 5];arr.sort((a, b) =&gt; b-a);sort函数通过sortBy回调函数，可实现自定义排序。函数中带有两个参数，代表数组中的前后元素。如果计算后（a-b）&gt; 0,就是升序，（b-a）&gt; 0,就是降序4.简要阐述call( )和apply( )的作用和异同点。call和apply都是在特定的作用域中调用函数，它们都能够扩充函数运行的作用域；除了接受参数的方式不同外，它们并没有区别；使用call方法时，传递给函数的参数必须逐个列出来，而apply接收的是参数数组。5.typeof(Number(&quot;42&quot;) = __________，typeof(new Number(&quot;42&quot;)) = __________，new Number(&quot;42&quot;) instanceof Number = __________，Number(&quot;42&quot;) instanceof Number = __________。答案：number、object、true、false6.试解释什么叫做递归函数然后利用递归设计一个阶乘函数。递归函数是“自己调用自己”的函数，执行递归函数将反复的调用其自身，直到满足某个条件才结束调用。1234567function factorial(num) &#123; if(num &lt;= 1) &#123; return 1; &#125; else &#123; return num * factorial(num - 1); &#125;&#125;说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第9天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>js练习题答案</tag>
        <tag>数组</tag>
        <tag>递归</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第9天]]></title>
    <url>%2Fjsexer9.html</url>
    <content type="text"><![CDATA[在本栏中，我将记录一些JavaScript基础练习题，提升大家对JS的理解。该篇文章是该系列的第九天。正文1.分析以下代码:1var arr = new Array("3");运行后arr.length = __________, arr[1] = __________12arr[arr.length] = 4; arr[arr.length] = 5;现在，arr = __________。2.分析以下代码。12var arr = [0, 15, 10, 1, 5];arr.sort();代码运行后，arr = __________。3.要实现数组中的值按数值大小降序排序，应如何编写代码?以第2题中的arr为例。4.简要阐述call( )和apply( )的作用和异同点。5.typeof(Number(&quot;42&quot;) = __________，typeof(new Number(&quot;42&quot;)) = __________，new Number(&quot;42&quot;) instanceof Number = __________，Number(&quot;42&quot;) instanceof Number = __________。6.试解释什么叫做递归函数然后利用递归设计一个阶乘函数。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第9天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>数组</tag>
        <tag>递归</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第8天 答案及解析]]></title>
    <url>%2Fjsexer8-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第八天的答案及解析部分，纯题目部分请移步js基础练习题 第8天正文1.分析以下代码:1234var i = 0;do&#123; i += 2;&#125;while(i &lt; 10);运行结果为i = __________答案：101234var i = 0;while(i &lt; 10)&#123; i += 2;&#125;运行结果为i = __________。答案：10while与do...while最重要的区别是后者至少会执行一次。2.执行下列代码后，控制台将输出__________。1234567891011var a = "0xa";switch(a)&#123; case 10: console.log("a is 10"); break; case "10": console.log("a is '10'"); break; default: console.log("other value");&#125;答案：other value在switch中，变量不会进行类型转换，或者说，使用的是===进行判断3.sayHi函数被调用后，弹窗的弹出内容是__________。1234function sayHi() &#123; return "hello"; alert("Hello World");&#125;答案：不会弹出弹窗位于return语句后的代码不会被执行4.分析下列代码。12var name = "Jealyn";name.age = 22;name.age = __________，name.job = __________。答案：undefined、undefined基本数据类型不能存储键值对5.分析下列代码。123var obj1 = new Object();var obj2 = obj1;obj1.name = "Jealyn";obj2.name = __________，执行obj2.age = 22;后，obj1.age = __________。答案：Jealyn、226.分析下列代码。12345678function setName(obj) &#123; obj.name = "Jealyn"; obj = new Object(); obj.name = "Jinlin"; return obj.name;&#125;var person = new Object();setName(person);person.name = __________，setName(person)的返回值为 __________。答案：Jealyn、Jinlin说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第8天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>js练习题答案</tag>
        <tag>object</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第8天]]></title>
    <url>%2Fjsexer8.html</url>
    <content type="text"><![CDATA[在本栏中，我将记录一些JavaScript基础练习题，提升大家对JS的理解。该篇文章是该系列的第八天。正文1.分析以下代码:1234var i = 0;do&#123; i += 2;&#125;while(i &lt; 10);运行结果为i = __________,1234var i = 0;while(i &lt; 10)&#123; i += 2;&#125;运行结果为i = __________。2.执行下列代码后，控制台将输出__________。1234567891011var a = "0xa";switch(a)&#123; case 10: console.log("a is 10"); break; case "10": console.log("a is '10'"); break; default: console.log("other value");&#125;3.sayHi函数被调用后，弹窗的弹出内容是__________。1234function sayHi() &#123; return "hello"; alert("Hello World");&#125;4.分析下列代码。12var name = "Jealyn";name.age = 22;name.age = __________，name.job = __________。5.分析下列代码。123var obj1 = new Object();var obj2 = obj1;obj1.name = "Jealyn";obj2.name = __________，执行obj2.age = 22;后，obj1.age = __________。6.分析下列代码。12345678function setName(obj) &#123; obj.name = "Jealyn"; obj = new Object(); obj.name = "Jinlin"; return obj.name;&#125;var person = new Object();setName(person);person.name = __________，setName(person)的返回值为 __________。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第8天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>object</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第7天 答案及解析]]></title>
    <url>%2Fjsexer7-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第七天的答案及解析部分，纯题目部分请移步js基础练习题 第7天正文1.分析以下代码（其中b未定义）:12345console.log(typeof(a));console.log(a);console.log(typeof(b));console.log(b);var a;第1行的运行结果为__________，第2行的运行结果为__________，第3行的运行结果为__________，第4行的运行结果为__________。答案：undefined、undefined、undefined、报错(ReferenceError)本题考查的是变量提升和类型检测，在我的文章中该类型的题已经多次出现过。2.请简述undefined和null的区别以及用途。答案：undefined表示未对声明的变量进行初始化，通常不需要进行显式设置，常用于基本数据类型的设置；null表示一个空对象指针，常用来在将来保存对象，undefined值是派生自null值的。3.写出下列代码运行的结果。Boolean(&quot;&quot;) = __________，Boolean({}) = __________，Boolean([]) = __________，Boolean(5/0) = __________，Boolean(0/0) = __________，Boolean(new Boolean(false)) = __________。答案：false、true、true、true、false、trueBoolean( )的转换规则：数据类型转换为true的值转换为false的值BooleantruefalseString任何非空字符串空字符串Number任何非零数字值0和NaNObject任何对象nullUndefined\undefined4.写出下列代码运行的结果。isNaN(&quot;10&quot;)的返回值为__________，Number.isNaN(&quot;10&quot;)的返回值为__________，isNaN(&quot;blue&quot;)的返回值为__________，Number.isNaN(&quot;blue&quot;)的返回值为__________。答案：false、false、true、falseisNaN( )会将参数转换为数字，若能转换成功，则返回false，否则返回true；Number.isNaN( )只判断数字值是否为NaN，对于其他类型的值，一律返回false。5.写出下列代码运行的结果。Number(&quot;abc&quot;)的返回值__________，Number(&quot;&quot;)的返回值为__________，Number(undefined)的返回值为__________，Number(null)的返回值为__________，parseInt(&quot;&quot;)的返回值为__________，parseInt(&quot;23a&quot;,7)的返回值为__________，parseFloat(&quot;0xa&quot;)的返回值为__________，parseFloat(&quot;012&quot;)的返回值为__________。答案：NaN、0、NaN、0、NaN、17、0、12(1)Number( )转换规则：原始值转换结果原始值转换结果true1“number”numberfalse0空字符串0null0“0number”numberundefinedNaN其他NaN(2)parseInt( )转换规则：原始值转换结果原始值转换结果true/falseNaN“num str”numnull/undefinedNaN“number”number空字符串NaN带进制的字符串根据相应进制转换parseInt( )可以接受第2参数，表示转换时使用的基数。(3)parseFloat( )与parseInt( )类似，但有一点重要的区别，即parseFloat( )会忽略前导的0，即16进制数和8进制数始终都会返回0。说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第7天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>js练习题答案</tag>
        <tag>类型检测</tag>
        <tag>null和undefined</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第7天]]></title>
    <url>%2Fjsexer7.html</url>
    <content type="text"><![CDATA[在本栏中，我将记录一些JavaScript基础练习题，提升大家对JS的理解。该篇文章是该系列的第七天。正文1.分析以下代码（其中b未定义）:12345console.log(typeof(a));console.log(a);console.log(typeof(b));console.log(b);var a;第1行的运行结果为__________，第2行的运行结果为__________，第3行的运行结果为__________，第4行的运行结果为__________。2.请简述undefined和null的区别以及用途。3.写出下列代码运行的结果。Boolean(&quot;&quot;) = __________，Boolean({}) = __________，Boolean([]) = __________，Boolean(5/0) = __________，Boolean(0/0) = __________，Boolean(new Boolean(false)) = __________。4.写出下列代码运行的结果。isNaN(&quot;10&quot;)的返回值为__________，Number.isNaN(&quot;10&quot;)的返回值为__________，isNaN(&#39;blue&#39;)的返回值为__________，Number.isNaN(&quot;blue&quot;)的返回值为__________。5.写出下列代码运行的结果。Number(&quot;abc&quot;)的返回值__________，Number(&quot;&quot;)的返回值为__________，Number(undefined)的返回值为__________，Number(null)的返回值为__________，parseInt(&quot;&quot;)的返回值为__________，parseInt(&quot;23a&quot;,7)的返回值为__________，parseFloat(&quot;0xa&quot;)的返回值为__________，parseFloat(&quot;012&quot;)的返回值为__________。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第7天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>类型检测</tag>
        <tag>null和undefined</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第6天 答案及解析]]></title>
    <url>%2Fjsexer6-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第六天的答案及解析部分，纯题目部分请移步js基础练习题 第6天正文1.执行完下列代码段后，页面中输出__________，s1 = __________。123var s1 = new String("010-98989999"); document.write(s1.substring(1, 4)); document.write(s1.substr(1, 4));答案：10-10-9， 010-98989999substr第二个参数为要截取的子串的长度，substring第二个参数为结束截取的位置（不包含该位置），且两个方法均不改变原字符串的内容。2.执行完下列代码段后，emp.length = ________________，emp[0] = ________________。123var emp = new Array(5);emp[1] = 1;emp[2] = 2;答案：5、undefinedArray构造函数中的参数即为数组的长度，当未定义数组项值时，即为undefined3.以下代码运行的结果是输出 ________________。12345var a = b = 10; (function() &#123; var a = b = 20 &#125;)(); console.log(b); 答案：20立即执行函数中的b为全局变量4.以下代码运行后弹出的结果是 ________________。123var a = 888; ++a; alert(a++);答案：8895.下面代码运行后,k的值是 ____。1234var i = 0, j = 0; for(;i &lt; 10, j &lt; 6; i++, j++)&#123; k = i + j;&#125;答案：10当j = 6时终止循环，此时k = i + j = 5 + 5。6.[1,2,3,4].join("0").split("") 的返回值是 ________________。答案：[&quot;1&quot;, &quot;0&quot;, &quot;2&quot;, &quot;0&quot;, &quot;3&quot;, &quot;0&quot;, &quot;4&quot;][1,2,3,4].join(&quot;0&quot;) = &quot;1020304&quot;.split(&quot;&quot;) = [&quot;1&quot;, &quot;0&quot;, &quot;2&quot;, &quot;0&quot;, &quot;3&quot;, &quot;0&quot;, &quot;4&quot;]7.下面代码运行时，第一次弹出 ________________，第二次弹出 ________________。1234function fn1() &#123; alert(1);&#125; alert(fn1());答案：1、undefined8.以下代码运行后,弹出的结果为 ____。1234fn1(); var fn1 = function(a) &#123; alert(a);&#125;;答案：报错（TypeError）9."12" > "9"的返回值是 ________________。答案：falseUnicode编码方式说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第6天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>js练习题答案</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第6天]]></title>
    <url>%2Fjsexer6.html</url>
    <content type="text"><![CDATA[在本栏中，我将记录一些JavaScript基础练习题，提升大家对JS的理解。该篇文章是该系列的第六天。正文1.执行完下列代码段后，页面中输出__________，s1 = __________。123var s1 = new String("010-98989999"); document.write(s1.substring(1, 4)); document.write(s1.substr(1, 4));2.执行完下列代码段后，emp.length = __________，emp[0] = __________。123var emp = new Array(5);emp[1] = 1;emp[2] = 2;3.以下代码运行的结果是输出 __________。12345var a = b = 10; (function() &#123; var a = b = 20 &#125;)(); console.log(b); 4.以下代码运行后弹出的结果是 __________。123var a = 888; ++a; alert(a++);5.下面代码运行后,k的值是__________。1234var i = 0, j = 0; for(;i &lt; 10, j &lt; 6; i++, j++)&#123; k = i + j;&#125;6.[1,2,3,4].join(&quot;0&quot;).split(&quot;&quot;) 的返回值是__________。7.下面代码运行时，第一次弹出__________，第二次弹出__________。1234function fn1() &#123; alert(1);&#125; alert(fn1());8.以下代码运行后,弹出的结果为__________。1234fn1(); var fn1 = function(a) &#123; alert(a);&#125;;9.&quot;12&quot; &gt; &quot;9&quot;的返回值是__________说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第6天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第5天 答案及解析]]></title>
    <url>%2Fjsexer5-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第五天的答案及解析部分，纯题目部分请移步js基础练习题 第5天正文1.有一张0.0001米厚的纸，至少对折多少次可以达到珠穆朗玛峰的高度8848米?试通过JS程序设计出来并给出结果。答案：271234567let paperHei = 0.0001;let count = 0;while(paperHei &lt; 8888)&#123; count++; paperHei *= 2;&#125;console.log(count);2.12var a = 3, b = 2; var c = a+++b; 这段代码运行后，c的值为____，a的值为____。答案：5、4a+++b拆分开来就是a++ + b,即a + b后，a再自增1。3.运用js代码分别在警告框、页面、控制台输出&quot;Hello world!&quot;。window.alert(&quot;Hello world!&quot;);document.write(&quot;Hello world!&quot;);console.log(&quot;Hello world!&quot;);4.12var i = 10;var j = i+++i+++ ++i+i--;这段代码运行后，i的值为________________，j--的值为________________。答案：12、47i+++i+++ ++i+i--拆开就是i++ + i++ + ++i + i--，即10 + 11 + 13 + 135.有一些苹果，每人分5个多一个，每人分6个多2个，每人分7个多3个。最少有多少个苹果?试通过JS程序设计出来并给出结果。答案：206123456789let count = 0;while(1)&#123; if (count % 5 == 1 &amp;&amp; count % 6 == 2 &amp;&amp; count % 7 == 3) &#123; console.log(count); break; &#125; else &#123; count++; &#125;&#125;6.如何获取到现在时刻所对应的星期，并转换成类似”星期一”、”星期二”这样的格式?写出相应的JS程序。解法1：利用switch…case123456789101112131415161718192021222324252627var day = new Date().getDay();var weekday;switch(day) &#123; case 0: weekday = “星期日”; break; case 1: weekday = “星期一”; break; case 2: weekday = “星期二”; break; case 3: weekday = “星期三”; break; case 4: weekday = “星期四”; break; case 5: weekday = “星期五”; break; case 6: weekday = “星期六”; break; default: weekday = “数据有误”;&#125;解法2：利用数组123var day = new Date().getDay();var weekday = [“星期日”, “星期一”, “星期二”, “星期三”, “星期四”, “星期五”, “星期六”];console.log(weekday[day]);case语句里面一定要加上break语句，否则程序总会执行最后一个语句的内容。7.要生成一个1到7之间的随机数（包括1和7）的JS代码可以怎样写?答案：var random = Math.ceil(Math.random( ) * 6) + 1;说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第5天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>js练习题答案</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第5天]]></title>
    <url>%2Fjsexer5.html</url>
    <content type="text"><![CDATA[在本栏中，我将记录一些JavaScript基础练习题，提升大家对JS的理解。该篇文章是该系列的第五天。正文有一张0.0001米厚的纸，对折多少次可以达到珠穆朗玛峰的高度8848米?试通过JS程序设计出来并给出结果。12var a = 3, b = 2; var c = a+++b; 这段代码运行后，c的值为__________，a的值为__________。运用js代码分别在警告框、页面、控制台输出&quot;Hello world!&quot;。12var i = 10;var j = i+++i+++ ++i+i--;这段代码运行后，i的值为__________，j--的值为__________。有一些苹果，每人分5个多一个，每人分6个多2个，每人分7个多3个。最少有多少个苹果?试通过JS程序设计出来并给出结果。如何获取到现在时刻所对应的星期，并转换成类似“星期一”、“星期二”这样的格式?写出相应的JS程序。要生成一个1到7之间的随机数（包括1和7）的JS代码可以怎样写?说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第5天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第4天 答案及解析]]></title>
    <url>%2Fjsexer4-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第四天的答案及解析部分，纯题目部分请移步js基础练习题 第4天正文该题目转自 80% 应聘者都不及格的 JS 面试题，原文中也含有详细的解析。仔细阅读以下代码段，回答下列问题:123456for (var i = 0; i &lt; 5; i++) &#123; setTimeout(function() &#123; console.log(i); &#125;, 1000);&#125; console.log(i);1.该代码段的运行结果是什么？答案：5 5 5 5 5 5由于setTimeout中的回调函数会异步执行，故首先输出循环体外的内容。经过循环，此时i已变为5，故输出5。然后再等待大概1秒后输出5个5。2.若用箭头（=>）表示其前后的两次输出之间有 1 秒的时间间隔，而逗号（,）表示其前后的两次输出之间的时间间隔可以忽略，那么代码实际运行的结果该如何描述？答案：5 =&gt; 5, 5, 5, 5, 5该题涉及到js的定时器工作机制和js的事件循环机制。5个定时器几乎是同时设置为1s后执行，故后面5次输出几乎没有间隔。3.如果期望代码的输出变成：5 => 0, 1, 2, 3, 4，该怎么改造代码?给出你的解决方案答案：提供两种解法解法1：利用立即执行函数IIFE12345678for (var i = 0; i &lt; 5; i++) &#123; (function(j)&#123; setTimeout(function() &#123; console.log(j); &#125;, 1000); &#125;)(i);&#125;console.log(i);解法2：利用按值传递，循环中调用普通函数，而不是回调函数123456789var output = function(i)&#123; setTimeout(function() &#123; console.log(i); &#125;, 1000);&#125;;for (var i = 0; i &lt; 5; i++) &#123; output(i);&#125;console.log(i);简单的把循环内的var声明改为let声明，并不能达到效果，因为let声明的变量在循环外并不能访问到。4.如果期望代码的输出变成0 => 1 => 2 => 3 => 4 => 5，并且要求原有的代码块中的循环和两处console.log不变，该怎么改造代码?给出你的解决方案答案：提供三种解法解法1：利用按值传递，每次递增计数器的延时1234567891011var output = function(i) &#123; setTimeout(function() &#123; console.log(i); &#125;, 1000i);&#125;;for (var i = 0; i &lt; 5; i++) &#123; output(i);&#125;setTimeout(function() &#123; console.log(i); &#125;, 1000i);解法2：利用立即执行函数IIFE，思路同解法112345678910for (var i = 0; i &lt; 5; i++) &#123; (function(j)&#123; setTimeout(function() &#123; console.log(j); &#125;, 1000 j); &#125;)(i);&#125;setTimeout(function() &#123; console.log(i); &#125;, 1000 i);解法3：利用ES6的Promise1234567891011121314151617const tasks = [];const output = (i) =&gt; &#123; new Promise((resolve) =&gt; &#123; setTimeout(() =&gt; &#123; console.log(i); resolve(); &#125;, 1000 * i); &#125;);&#125;for (var i = 0; i &lt; 5; i++) &#123; tasks.push(output(i));&#125;Promise.all(tasks).then(() =&gt; &#123; setTimeout(() =&gt; &#123; console.log(i); &#125;, 1000);&#125;);5.setTimeout定时是否准确?为什么?答案：SetTimeout定时并不一定是准确的，详见实际延时比设定值更久的原因6.简单谈谈你对闭包的理解?参考链接：学习Javascript闭包说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看纯习题版，请点击js基础练习题 第四天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>js练习题答案</tag>
        <tag>setTimeout</tag>
        <tag>闭包</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第4天]]></title>
    <url>%2Fjsexer4.html</url>
    <content type="text"><![CDATA[在本栏中，我将记录一些JavaScript基础练习题，提升大家对JS的理解。该篇文章是该系列的第四天。正文该题目转自 80% 应聘者都不及格的 JS 面试题，感谢作者提供如此优质的面试题。仔细阅读以下代码段，回答下列问题:123456for (var i = 0; i &lt; 5; i++) &#123; setTimeout(function() &#123; console.log(i); &#125;, 1000);&#125; console.log(i);该代码段的运行结果是什么？若用箭头（=&gt;）表示其前后的两次输出之间有 1 秒的时间间隔，而逗号（,）表示其前后的两次输出之间的时间间隔可以忽略，那么代码实际运行的结果该如何描述？如果期望代码的输出变成：5 =&gt; 0, 1, 2, 3, 4，该怎么改造代码?给出你的解决方案如果期望代码的输出变成0 =&gt; 1 =&gt; 2 =&gt; 3 =&gt; 4 =&gt; 5，并且要求原有的代码块中的循环和两处console.log不变，该怎么改造代码?给出你的解决方案setTimeout定时是否准确?为什么?简单谈谈你对闭包的理解?说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript题目中，若有错误和需完善的地方，可在下方留言反馈哈~~查看答案和解析，请点击js基础练习题第4天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>setTimeout</tag>
        <tag>闭包</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第3天 答案及解析]]></title>
    <url>%2Fjsexer3-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第三天的答案及解析部分，纯题目部分请移步js基础练习题 第3天正文1.1234var exerOne = false; if (exerOne = true) &#123; exerOne = true;&#125;执行以上代码后，exerOne 的值为______________。答案：true注意第2行中的=为赋值操作2.1234567891011var weekday = new Date().getDay(); switch(weekday)&#123; case 0: weekday = "星期天"; case 1: weekday = "星期一"; case 2: weekday = "星期二"; case 3: weekday = "星期三"; case 4: weekday = "星期四"; case 5: weekday = "星期五"; case 6: weekday = "星期六"; default: weekday = 'unknown'; &#125;执行以上代码后，weekday 的值是____。答案：unknownswitch循环中的case语句后若不添加break，则每个case都会执行，返回的内容取决于最后一个语句3.给定一个变量，如何检测它是否为 NaN ?答案：NaN是唯一一个自身与自身不相等的值，利用if(name !== name)如果结果为真，则证明该值为NaN。利用isNaN()函数，可以更准确的检测。关于isNaN()和Number.isNaN()的区别，点击这里4.123456789var array=[]; for (var i = 0; i &lt; 5; i++) &#123; if (i == 2) break; array.push(i); for (var j = 0; j &lt; 5; j++) &#123; if(j == 2) continue; array.push(j); &#125; &#125;执行完这段程序，array 的结果为______________。答案：[0, 0, 1, 3, 4, 1, 0, 1, 3, 4]break语句是退出整个循环，而continue语句是退出当前循环而进入下一次循环5.123var foo = function bar() &#123; return 12; &#125;执行完这段代码后，请问：typeof(foo) = ______________；typeof(foo()) = ______________；typeof(bar) = ______________；typeof(bar()) = ______________。答案：function、number、undefined、报错(ReferenceError)在此题中，foo才是函数名。执行typeof(foo())得到的是foo函数的返回值，如果没有返回值，则为undefined。6.12345678var a, b;(function() &#123; var a = b = 5; alert(a); alert(b);&#125;)();alert(a);alert(b);执行程序，依次弹出的值为______________、______________、______________、______________。答案：5、5、undefined、5该题目考查了js变量定义及作用域的概念。在立即执行函数内部定义var a = b = 5;实际上相当于执行123b = 5;var a;a = b;故在函数外部的变量b也同步修改了，而函数外部的变量a未被修改7.1var array = new Array(0x17);Number(array); 的结果是_______，array.length; 的值是_______。答案：NaN、23js会根据在Array构造函数中传入的参数值n确定数组的初始长度为n，0x17为十六进制，转换为十进制为23。对数组调用Number()方法，会先将该数组转为会string类型，再转换为number类型。说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第3天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>js练习题答案</tag>
        <tag>Array</tag>
        <tag>类型检测</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第3天]]></title>
    <url>%2Fjsexer3.html</url>
    <content type="text"><![CDATA[在本栏中，我将更新一些JavaScript基础练习题。这些习题，很大一部分是我在学习过程中记下的笔记或者遇到的坑，还有就是很重要很重要的基础概念。我觉得非常适合刚入门前端开发的朋友们，希望大家有所收获，这就足够咯。正文1.1234var exerOne = false; if (exerOne = true) &#123; exerOne = true;&#125;执行以上代码后，exerOne 的值为______________。2.1234567891011var weekday = new Date().getDay(); switch(weekday)&#123; case 0: weekday = "星期天"; case 1: weekday = "星期一"; case 2: weekday = "星期二"; case 3: weekday = "星期三"; case 4: weekday = "星期四"; case 5: weekday = "星期五"; case 6: weekday = "星期六"; default: weekday = 'unknown'; &#125;执行以上代码后，weekday 的值是______________。3.给定一个变量，如何检测它是否为 NaN ?4.123456789var array=[]; for (var i = 0; i &lt; 5; i++) &#123; if (i == 2) break; array.push(i); for (var j = 0; j &lt; 5; j++) &#123; if(j == 2) continue; array.push(j); &#125; &#125;执行完这段程序，array 的结果为______________。5.123var foo = function bar() &#123; return 12; &#125;执行完这段代码后，请问：typeof(foo) = _________；typeof(foo()) = _________；typeof(bar) = _________；typeof(bar()) = _________。6.12345678var a, b;(function() &#123; var a = b = 5; alert(a); alert(b);&#125;)();alert(a);alert(b);执行程序，依次弹出的值为_______、_______、_______、_______。7.1var array = new Array(0x17);Number(array); 的结果是_______，array.length; 的值是_______。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第3天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
        <tag>类型检测</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第2天]]></title>
    <url>%2Fjsexer2.html</url>
    <content type="text"><![CDATA[在本栏中，我将记录一些JavaScript基础练习题，提升大家对JS的理解。该篇文章是该系列的第二天。正文1.1var exerOne = 'test;则exerOne = __________。2.1var exerTwo = 52 / 0;则 exerTwo = __________，typeof(exerTwo) = __________。3.1var exerThree = 0 / 0;则exerThree = __________，typeof(exerThree) = __________。4.1var exerFour = "-3.3E+2-5";则Number(exerFour) = __________，parseFloat(exerFour) = __________。5.12var exerFive_1 = 5 / 2; var exerFive_2 = " is float?";则exerFive_1 + exerFive_2 = __________。6.0.1 + 0.2 == 0.3 的返回值为__________，若结果为假，请设计一种方法，使结果准确。7.1var exerSeven = "this is\" test string";则exerSeven.slice(5, 8)的返回值是__________。8.下面哪些操作不会改变原始数组，而是返回一个新的数组__________。选项选项选项选项A、forEach()B、reverse()C、sort()D、slice()E、concat()F、splice（）G、join（）H、shift（）I、reduce（）J、copyWithin()K、pop()L、map()说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第2天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>Array</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第2天 答案及解析]]></title>
    <url>%2Fjsexer2-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第二天的答案及解析部分，纯题目部分请移步js基础练习题 第2天正文1.1var exerOne = 'test;则exerOne = __________。答案：报错（SyntaxError）字符串test缺少了闭合的引号。2.1var exerTwo = 52 / 0;则 exerTwo = __________，typeof(exerTwo) = __________。答案：Infinity、&quot;number&quot;在js中，大于0的数除0，结果为Infinity；0除0，结果为NaN；小于0的数除0，结果为-Infinity。3.1var exerThree = 0 / 0;则exerThree = __________，typeof(exerThree) = __________。答案：NaN、&quot;number&quot;4.1var exerFour = "-3.3E+2-5";则Number(exerFour) = __________，parseFloat(exerFour) = __________。答案：NaN、-330该串字符为科学计数法与减法的混合，化为一般表示方法为-3.3 * 10^2 - 5。遇到第二个减号时就不再执行，Number()直接返回NaN，而parseFloat()则返回的是前部分的执行结果即-3.3 * 10^2。5.12var exerFive_1 = 5 / 2; var exerFive_2 = " is float?";则exerFive_1 + exerFive_2 = __________。答案：”2.5 is float?”6.0.1 + 0.2 == 0.3 的返回值为__________，若结果为假，请设计一种方法，使结果准确。答案：如下代码段所示：12345// 方法一：固定小数位数(0.1 + 0.2).toFixed(1)// 方法二：化整再除(0.1 * 10 + 0.2 * 10) / 10 7.1var exerSeven = "this is\" test string";则exerSeven.slice(5, 8)的返回值是__________。答案：”is””\&quot;将被转义为&quot;，String.slice(b, e)方法将截取从b索引开始，到e索引（不包括e）结束的子串。8.下面哪些操作不会改变原始数组，而是返回一个新的数组__________。A、forEach() B、reverse() C、sort() D、slice()E、concat() F、splice（） G、join（） H、shift（）I、reduce（） J、copyWithin() K、pop() L、map()答案：A、D、E、L数组方法总结：方法描述是否改变原始数组join()返回以指定分隔符分隔而成的字符串否push()、unshift()返回修改后数组的长度是pop()、shift()返回弹出的元素是sort()返回经过排序后的数组是reverse()返回经过反序后的数组是concat()返回合并后的数组否slice()返回截取的数组否splice()返回删除的元素组成的一个数组是indexOf()、lastIndexOf()返回指定项的索引值否map()返回每次函数调用结果组成的数组否filter()返回符合过滤条件的结果组成的数组否reduce()返回迭代函数处理后的值否copyWithin()将数组中指定位置的成员复制到本数组其他位置是说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第2天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>js练习题答案</tag>
        <tag>Array</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js练习题第1天 答案及解析]]></title>
    <url>%2Fjsexer1-ans.html</url>
    <content type="text"><![CDATA[本篇文章是js基础练习题第一天的答案及解析部分，纯题目部分请移步js基础练习题 第1天正文1.JS的两种注释格式是 __________ 和__________。答案：/* 多行注释 */、// 单行注释2.向一个页面加入JS代码，有几种方式，试分别解释之。内部式：在HTML内的script标签对之间添加JS代码。内联式：即在HTML元素的属性上引入JS事件，如&lt;p onclick=&quot;alert(&#39;this is inner-JS&#39;);&quot;&gt;your text&lt;/p&gt;，这种方式是最不被推荐的。外部式:即通过在HTML用script标签的src属性引入js文件。3.myage 和 myAge 是两个不同的变量，判断正误。答案：正确，js中的变量区分大小写。4._12在JS中是合法的变量名，判断正误。答案：正确5.声明变量 var test = 6 &lt; 3; 结果为 test = __________。答案：false6.12var num1 = 10; var num2 = 8; 则num2 + num1 / 8 + 2的结果为__________。答案：11.257.var test = 3.2E+10;，则typeof(test) 的结果为__________。答案：”number”8.console.log(3++);的结果为__________。答案：报错（ReferenceError）非变量不能使用自增、自减操作符。9.var a = 3;，则console.log(a++)的结果为__________。答案：310.null == undefined的返回值为__________。答案：true11.null == false的返回值为__________。答案：falsenull、undefined与布尔值进行比较时不会进行类型转换，即null == true仍会返回false。12.JS有几种基本的数据类型，试列举。答案：JS中一共有7种基本类型，分别是number、boolean、null、undefined、string、symbol、bigint。13.typeof(null); 的返回值为__________。答案：&quot;object&quot;说明题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript答案中，若有错误和需完善的地方，可在下方留言反馈哈~~查看纯习题版，请点击js基础练习题 第1天]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>答案及解析</category>
      </categories>
      <tags>
        <tag>数据类型</tag>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
        <tag>js练习题答案</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js基础练习题 第1天]]></title>
    <url>%2Fjsexer1.html</url>
    <content type="text"><![CDATA[在本栏中，我将记录一些JavaScript基础练习题，提升大家对JS的理解。该篇文章是该系列的第一天。正文1.JS的两种注释格式是 __________ 和__________。2.向一个页面加入JS代码，有几种方式，试分别解释之。3.myage 和 myAge 是两个不同的变量，判断正误。4._12 在JS中是合法的变量名，判断正误。5.声明变量 var test = 6 &lt; 3; 结果为 test = __________。6.12var num1 = 10; var num2 = 8; 则num2 + num1 / 8 + 2的结果为__________。7.var test = 3.2E+10;则typeof(test) 的结果为__________。8.console.log(3++); 的结果为__________。9.var a = 3;则console.log(a++); 的结果为__________。10.null == undefined 的返回值为__________。11.null == false 的返回值为__________。12.JS有几种基本的数据类型，试列举。13.typeof(null); 的返回值为__________。说明1.题目中出现的JS指的是采用ECMAScript 2015及之后标准的JavaScript2.题目中，若有错误和需完善的地方，可在下方留言反馈哈~~3.查看答案和解析，请点击js基础练习题第1天 答案及解析]]></content>
      <categories>
        <category>JS基础练习题</category>
        <category>习题</category>
      </categories>
      <tags>
        <tag>数据类型</tag>
        <tag>javascript</tag>
        <tag>web前端</tag>
        <tag>前端面试题</tag>
      </tags>
  </entry>
</search>
